{
    "project": {
        "name": "Projects4Me",
        "description": "Open source project management and collaboration software",
        "url": "http://porjects4.me/",
        "version": "0.0.0"
    },
    "files": {
        "app/adapters/application.js": {
            "name": "app/adapters/application.js",
            "modules": {},
            "classes": {
                "Prometheus.Adapter.Application": 1
            },
            "fors": {
                "ApplicationAdapter": 1,
                "Prometheus.Adapter.ApplicationAdapter": 1
            },
            "namespaces": {
                "Prometheus.Adapter": 1
            }
        },
        "app/authenticators/oauth2.js": {
            "name": "app/authenticators/oauth2.js",
            "modules": {},
            "classes": {
                "Prometheus.Authenticators.OAuth2Authenticator": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Authenticators": 1
            }
        },
        "app/authorizers/oauth2.js": {
            "name": "app/authorizers/oauth2.js",
            "modules": {},
            "classes": {
                "Prometheus.Authorizers.OAuth2Authorizer": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Authorizers": 1
            }
        },
        "app/components/action-menu.js": {
            "name": "app/components/action-menu.js",
            "modules": {},
            "classes": {},
            "fors": {
                "ActionMenu": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/activity-block.js": {
            "name": "app/components/activity-block.js",
            "modules": {},
            "classes": {},
            "fors": {
                "ActivityBlock": 1,
                "Prometheus.Components.ActivityBlock": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/bootstrap-modal.js": {
            "name": "app/components/bootstrap-modal.js",
            "modules": {},
            "classes": {},
            "fors": {
                "BootstrapModal": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/chart-estimatedspent.js": {
            "name": "app/components/chart-estimatedspent.js",
            "modules": {},
            "classes": {
                "Prometheus.Components.ChartEstimatedspent": 1
            },
            "fors": {
                "ChartIssueratio": 1,
                "Prometheus.Components.ChartIssueratio": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/chart-issueratio.js": {
            "name": "app/components/chart-issueratio.js",
            "modules": {},
            "classes": {
                "Prometheus.Components.ChartIssueratio": 1
            },
            "fors": {
                "Prometheus.Components.ChartIssueratio": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/chat-box.js": {
            "name": "app/components/chat-box.js",
            "modules": {},
            "classes": {},
            "fors": {
                "ChatBox": 1,
                "Prometheus.Component.ChatBox": 1
            },
            "namespaces": {
                "Prometheus.Component": 1
            }
        },
        "app/components/checkbox-field.js": {
            "name": "app/components/checkbox-field.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CheckboxField": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/content-editable.js": {
            "name": "app/components/content-editable.js",
            "modules": {},
            "classes": {},
            "fors": {
                "ContentEditable": 1,
                "Prometheus.Components.ContentEditable": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/field-checkbox.js": {
            "name": "app/components/field-checkbox.js",
            "modules": {},
            "classes": {},
            "fors": {
                "FieldCheckbox": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/field-date.js": {
            "name": "app/components/field-date.js",
            "modules": {},
            "classes": {},
            "fors": {
                "FieldDate": 1,
                "Prometheus.Components.FieldDate": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/field-image.js": {
            "name": "app/components/field-image.js",
            "modules": {},
            "classes": {},
            "fors": {
                "FieldImage": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/field-radio.js": {
            "name": "app/components/field-radio.js",
            "modules": {},
            "classes": {},
            "fors": {
                "FieldRadio": 1,
                "Prometheus.Components.FieldRadio": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/field-text.js": {
            "name": "app/components/field-text.js",
            "modules": {},
            "classes": {},
            "fors": {
                "FieldText": 1,
                "Prometheus.Components.FieldText": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/field-textarea.js": {
            "name": "app/components/field-textarea.js",
            "modules": {},
            "classes": {},
            "fors": {
                "FieldTextarea": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/field-view.js": {
            "name": "app/components/field-view.js",
            "modules": {},
            "classes": {},
            "fors": {
                "FieldView": 1,
                "Prometheus.Components.FieldView": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/form-fields.js": {
            "name": "app/components/form-fields.js",
            "modules": {},
            "classes": {},
            "fors": {
                "FormFields": 1,
                "Prometheus.Components.FormFields": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/message-box.js": {
            "name": "app/components/message-box.js",
            "modules": {},
            "classes": {},
            "fors": {
                "MessageBox": 1,
                "Prometheus.Components.MessageBox": 1,
                "MessageBoxComponent": 1,
                "Prometheus.Components.MessageBoxComponent": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/milestone-block.js": {
            "name": "app/components/milestone-block.js",
            "modules": {},
            "classes": {},
            "fors": {
                "MilestoneBlock": 1,
                "Prometheus.Components.MilestoneBlock": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/nav-bar.js": {
            "name": "app/components/nav-bar.js",
            "modules": {},
            "classes": {},
            "fors": {
                "NavBar": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/query-builder.js": {
            "name": "app/components/query-builder.js",
            "modules": {},
            "classes": {},
            "fors": {
                "QueryBuilder": 1,
                "Prometheus.Components.QueryBuilder": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/quill-editor.js": {
            "name": "app/components/quill-editor.js",
            "modules": {},
            "classes": {
                "Prometheus.Components.QuillEditor": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/text-field.js": {
            "name": "app/components/text-field.js",
            "modules": {},
            "classes": {},
            "fors": {
                "TextField": 1
            },
            "namespaces": {
                "Prometheus.Component": 1
            }
        },
        "app/components/textarea-field.js": {
            "name": "app/components/textarea-field.js",
            "modules": {},
            "classes": {},
            "fors": {
                "TextareaField": 1,
                "Prometheus.Components.TextareaField": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/components/tree-list.js": {
            "name": "app/components/tree-list.js",
            "modules": {},
            "classes": {},
            "fors": {
                "TreeList": 1
            },
            "namespaces": {
                "Prometheus.Components": 1
            }
        },
        "app/controllers/app/project/issue/index.js": {
            "name": "app/controllers/app/project/issue/index.js",
            "modules": {},
            "classes": {
                "Prometheus.Controllers.Issue": 1
            },
            "fors": {
                "Issue": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1
            }
        },
        "app/controllers/app/project/wiki/create.js": {
            "name": "app/controllers/app/project/wiki/create.js",
            "modules": {},
            "classes": {
                "Prometheus.Controllers.Create": 1
            },
            "fors": {
                "Create": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1
            }
        },
        "app/controllers/app/project/wiki/edit.js": {
            "name": "app/controllers/app/project/wiki/edit.js",
            "modules": {},
            "classes": {
                "Prometheus.Controllers.Edit": 1
            },
            "fors": {
                "Edit": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1
            }
        },
        "app/controllers/app/project/wiki/index.js": {
            "name": "app/controllers/app/project/wiki/index.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Index": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1
            }
        },
        "app/controllers/app/project/wiki/page.js": {
            "name": "app/controllers/app/project/wiki/page.js",
            "modules": {},
            "classes": {
                "Prometheus.Controllers.Page": 1
            },
            "fors": {
                "page": 1,
                "Page": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1
            }
        },
        "app/controllers/app/project/calendar.js": {
            "name": "app/controllers/app/project/calendar.js",
            "modules": {},
            "classes": {
                "Prometheus.Controllers.Calendar": 1
            },
            "fors": {
                "Calendar": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1
            }
        },
        "app/controllers/app/project/conversation.js": {
            "name": "app/controllers/app/project/conversation.js",
            "modules": {},
            "classes": {
                "Prometheus.Controllers.Conversation": 1
            },
            "fors": {
                "Conversation": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1
            }
        },
        "app/controllers/app/project/index.js": {
            "name": "app/controllers/app/project/index.js",
            "modules": {},
            "classes": {
                "Prometheus.Controllers.Index": 1
            },
            "fors": {
                "Index": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1
            }
        },
        "app/controllers/app/project/wiki.js": {
            "name": "app/controllers/app/project/wiki.js",
            "modules": {},
            "classes": {
                "Prometheus.Controllers.Wiki": 1
            },
            "fors": {
                "Wiki": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1
            }
        },
        "app/controllers/app/module.js": {
            "name": "app/controllers/app/module.js",
            "modules": {},
            "classes": {
                "Prometheus.Controller.Module": 1
            },
            "fors": {
                "Module": 1
            },
            "namespaces": {
                "Prometheus.Controller": 1
            }
        },
        "app/controllers/app/projectlist.js": {
            "name": "app/controllers/app/projectlist.js",
            "modules": {},
            "classes": {
                "Prometheus.Controllers.Projectlist": 1
            },
            "fors": {
                "Projectlist": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1
            }
        },
        "app/controllers/app.js": {
            "name": "app/controllers/app.js",
            "modules": {},
            "classes": {},
            "fors": {
                "App": 1,
                "Prometheus.Controller.App": 1
            },
            "namespaces": {
                "Prometheus.Controller": 1
            }
        },
        "app/controllers/signin.js": {
            "name": "app/controllers/signin.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Signin": 1,
                "Prometheus.Controller.Signin": 1
            },
            "namespaces": {
                "Prometheus.Controller": 1
            }
        },
        "app/helpers/count-votes.js": {
            "name": "app/helpers/count-votes.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.CountVotes": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/get-date.js": {
            "name": "app/helpers/get-date.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.GetDate": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/get-issuecount.js": {
            "name": "app/helpers/get-issuecount.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.GetIssuecount": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/get-page.js": {
            "name": "app/helpers/get-page.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.GetPage": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/get-prop.js": {
            "name": "app/helpers/get-prop.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.GetProp": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/get-role.js": {
            "name": "app/helpers/get-role.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.GetRole": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/get-timelog.js": {
            "name": "app/helpers/get-timelog.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.GetTimelog": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/get-wiki.js": {
            "name": "app/helpers/get-wiki.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.GetWiki": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/if-match.js": {
            "name": "app/helpers/if-match.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.IfMatch": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/nav-icon.js": {
            "name": "app/helpers/nav-icon.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.NavIcon": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/not-last.js": {
            "name": "app/helpers/not-last.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/object-empty.js": {
            "name": "app/helpers/object-empty.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.NotLast": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/priority-icon.js": {
            "name": "app/helpers/priority-icon.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/sortable-class.js": {
            "name": "app/helpers/sortable-class.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.SortableClass": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/static-list.js": {
            "name": "app/helpers/static-list.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.PriorityIcon": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/translate-comment.js": {
            "name": "app/helpers/translate-comment.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.TranslateComment": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/helpers/user-created.js": {
            "name": "app/helpers/user-created.js",
            "modules": {},
            "classes": {
                "Prometheus.Helpers.UserCreated": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Helpers": 1
            }
        },
        "app/initializers/inject-router.js": {
            "name": "app/initializers/inject-router.js",
            "modules": {},
            "classes": {
                "Prometheus.Initializers.InjectRouter": 1
            },
            "fors": {
                "Initializer": 1,
                "InjectRouter": 1
            },
            "namespaces": {
                "Prometheus.Initializers": 1
            }
        },
        "app/initializers/javascript-behaviors.js": {
            "name": "app/initializers/javascript-behaviors.js",
            "modules": {},
            "classes": {},
            "fors": {
                "JavascriptBehaviors": 1
            },
            "namespaces": {
                "Prometheus.Initializers": 1
            }
        },
        "app/initializers/setup-logger.js": {
            "name": "app/initializers/setup-logger.js",
            "modules": {},
            "classes": {},
            "fors": {
                "SetupLogger": 1
            },
            "namespaces": {
                "Prometheus.Initializers": 1
            }
        },
        "app/locales/en/translations.js": {
            "name": "app/locales/en/translations.js",
            "modules": {
                "i18n": 1
            },
            "classes": {
                "Prometheus.Locales.en": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Locales": 1
            }
        },
        "app/models/activity.js": {
            "name": "app/models/activity.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Activity": 1,
                "Prometheus.Models.Activity": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/comment.js": {
            "name": "app/models/comment.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Comment": 1,
                "Prometheus.Models.Comment": 1,
                "CommentModel": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/conversationroom.js": {
            "name": "app/models/conversationroom.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Conversationroom": 1,
                "Prometheus.Models.Conversationroom": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/issue.js": {
            "name": "app/models/issue.js",
            "modules": {},
            "classes": {
                "Prometheus.Models.Issue": 1
            },
            "fors": {
                "Issue": 1,
                "IssueModel": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/issuetype.js": {
            "name": "app/models/issuetype.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Issuetype": 1,
                "Prometheus.Models.Issuetype": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/membership.js": {
            "name": "app/models/membership.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Membership": 1,
                "Prometheus.Models.Membership": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/milestone.js": {
            "name": "app/models/milestone.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Milestone": 1,
                "Prometheus.Models.Milestone": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/project.js": {
            "name": "app/models/project.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Project": 1,
                "Prometheus.Models.Project": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/role.js": {
            "name": "app/models/role.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Role": 1,
                "Prometheus.Models.Role": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/tag.js": {
            "name": "app/models/tag.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Tagged": 1,
                "Prometheus.Models.Tagged": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/tagged.js": {
            "name": "app/models/tagged.js",
            "modules": {},
            "classes": {
                "Prometheus.Models.Tagged": 1
            },
            "fors": {
                "Prometheus.Models.Tagged": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/timelog.js": {
            "name": "app/models/timelog.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Timelog": 1,
                "Prometheus.Models.Timelog": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/token.js": {
            "name": "app/models/token.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Token": 1,
                "Prometheus.Models.Token": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/user.js": {
            "name": "app/models/user.js",
            "modules": {},
            "classes": {},
            "fors": {
                "User": 1,
                "Prometheus.Model.User": 1
            },
            "namespaces": {
                "Prometheus.Model": 1
            }
        },
        "app/models/vote.js": {
            "name": "app/models/vote.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Vote": 1,
                "Prometheus.Models.Vote": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/models/wiki.js": {
            "name": "app/models/wiki.js",
            "modules": {},
            "classes": {
                "Prometheus.Models.Wiki": 1
            },
            "fors": {
                "Wiki": 1
            },
            "namespaces": {
                "Prometheus.Models": 1
            }
        },
        "app/routes/app/project/issue/create.js": {
            "name": "app/routes/app/project/issue/create.js",
            "modules": {
                "App.Project.Issue": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app/project/issue/index.js": {
            "name": "app/routes/app/project/issue/index.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Index": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app/project/issue/page.js": {
            "name": "app/routes/app/project/issue/page.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app/project/wiki/create.js": {
            "name": "app/routes/app/project/wiki/create.js",
            "modules": {
                "App.Project.Wiki": 1
            },
            "classes": {
                "Prometheus.Routes.Create": 1
            },
            "fors": {
                "Create": 1,
                "Prometheus.Routes.Wiki.Create": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app/project/wiki/edit.js": {
            "name": "app/routes/app/project/wiki/edit.js",
            "modules": {},
            "classes": {
                "Prometheus.Routes.Edit": 1
            },
            "fors": {
                "Edit": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app/project/wiki/page.js": {
            "name": "app/routes/app/project/wiki/page.js",
            "modules": {},
            "classes": {
                "Prometheus.Routes.Page": 1
            },
            "fors": {
                "Page": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app/project/calendar.js": {
            "name": "app/routes/app/project/calendar.js",
            "modules": {
                "App.Project": 1
            },
            "classes": {
                "Prometheus.Routes.Calendar": 1
            },
            "fors": {
                "Calendar": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app/project/conversation.js": {
            "name": "app/routes/app/project/conversation.js",
            "modules": {},
            "classes": {
                "Prometheus.Routes.Conversation": 1
            },
            "fors": {
                "Conversation": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app/project/index.js": {
            "name": "app/routes/app/project/index.js",
            "modules": {},
            "classes": {
                "Prometheus.Routes.Index": 1
            },
            "fors": {
                "Index": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app/project/wiki.js": {
            "name": "app/routes/app/project/wiki.js",
            "modules": {},
            "classes": {
                "Prometheus.Routes.Wiki": 1
            },
            "fors": {
                "Wiki": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app/module.js": {
            "name": "app/routes/app/module.js",
            "modules": {
                "App": 1
            },
            "classes": {
                "Prometheus.Routes.Module": 1
            },
            "fors": {
                "Module": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app/project.js": {
            "name": "app/routes/app/project.js",
            "modules": {},
            "classes": {
                "Prometheus.Routes.Project": 1
            },
            "fors": {
                "Prometheus.Models.Project": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app/projectlist.js": {
            "name": "app/routes/app/projectlist.js",
            "modules": {},
            "classes": {
                "Prometheus.Routes.Projectlist": 1
            },
            "fors": {
                "Projectlist": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/app.js": {
            "name": "app/routes/app.js",
            "modules": {},
            "classes": {
                "Prometheus.Routes.App": 1
            },
            "fors": {
                "Prometheus.Controller.App": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/application.js": {
            "name": "app/routes/application.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Application": 1,
                "Prometheus.Routes.Application": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/routes/signin.js": {
            "name": "app/routes/signin.js",
            "modules": {},
            "classes": {
                "Prometheus.Routes.AppRoute": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Routes": 1
            }
        },
        "app/serializers/application.js": {
            "name": "app/serializers/application.js",
            "modules": {},
            "classes": {
                "Prometheus.Serializers.Application": 1
            },
            "fors": {
                "Prometheus.Routes.Application": 1
            },
            "namespaces": {
                "Prometheus.Serializers": 1
            }
        },
        "app/services/current-user.js": {
            "name": "app/services/current-user.js",
            "modules": {},
            "classes": {},
            "fors": {
                "CurrentUser": 1,
                "Prometheus.Services.CurrentUser": 1
            },
            "namespaces": {
                "Prometheus.Services": 1
            }
        },
        "app/services/related-fields.js": {
            "name": "app/services/related-fields.js",
            "modules": {},
            "classes": {},
            "fors": {
                "RelatedField": 1,
                "Prometheus.Services.RelatedField": 1
            },
            "namespaces": {
                "Prometheus.Services": 1
            }
        },
        "app/utils/data/modeltotree.js": {
            "name": "app/utils/data/modeltotree.js",
            "modules": {
                "Data": 1
            },
            "classes": {
                "Prometheus.Utils.Modeltotree": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Utils": 1
            }
        },
        "app/utils/metadata/metadata.js": {
            "name": "app/utils/metadata/metadata.js",
            "modules": {
                "Metadata": 1
            },
            "classes": {
                "Prometheus.Utils.Metadata": 1
            },
            "fors": {
                "Metadata": 1
            },
            "namespaces": {
                "Prometheus.Utils": 1
            }
        },
        "app/utils/navigation/navigation.js": {
            "name": "app/utils/navigation/navigation.js",
            "modules": {
                "Navigation": 1
            },
            "classes": {
                "Prometheus.Utils.Navigation": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Utils": 1
            }
        },
        "app/utils/query/builder.js": {
            "name": "app/utils/query/builder.js",
            "modules": {
                "Query": 1
            },
            "classes": {
                "Prometheus.Utils.Builder": 1
            },
            "fors": {
                "Builder": 1
            },
            "namespaces": {
                "Prometheus.Utils": 1
            }
        },
        "app/utils/query/parser.js": {
            "name": "app/utils/query/parser.js",
            "modules": {},
            "classes": {
                "Prometheus.Utils.Parser": 1
            },
            "fors": {
                "Parser": 1
            },
            "namespaces": {
                "Prometheus.Utils": 1
            }
        },
        "app/utils/validator/fields.js": {
            "name": "app/utils/validator/fields.js",
            "modules": {
                "Validator": 1
            },
            "classes": {
                "Prometheus.Utils.Fields": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Utils": 1
            }
        },
        "app/app.js": {
            "name": "app/app.js",
            "modules": {},
            "classes": {
                "Prometheus.Application": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus": 1
            }
        }
    },
    "modules": {
        "App.Project": {
            "name": "App.Project",
            "submodules": {},
            "elements": {},
            "classes": {
                "Prometheus.Controllers.Calendar": 1,
                "Prometheus.Routes.Calendar": 1,
                "Prometheus.Adapter.Application": 1,
                "Prometheus.Adapter.ApplicationAdapter": 1,
                "Prometheus.Authenticators.OAuth2Authenticator": 1,
                "Prometheus.Authorizers.OAuth2Authorizer": 1,
                "Prometheus.Components.ActionMenu": 1,
                "Prometheus.Components.ActivityBlock": 1,
                "Prometheus.Components.BootstrapModal": 1,
                "Prometheus.Components.ChartEstimatedspent": 1,
                "Prometheus.Components.ChartIssueratio": 1,
                "Prometheus.Component.ChatBox": 1,
                "Prometheus.Components.CheckboxField": 1,
                "Prometheus.Components.ContentEditable": 1,
                "Prometheus.Components.FieldCheckbox": 1,
                "Prometheus.Components.FieldDate": 1,
                "Prometheus.Components.FieldImage": 1,
                "Prometheus.Components.FieldRadio": 1,
                "Prometheus.Components.FieldText": 1,
                "Prometheus.Components.FieldTextarea": 1,
                "Prometheus.Components.FieldView": 1,
                "Prometheus.Components.FormFields": 1,
                "Prometheus.Components.MessageBox": 1,
                "Prometheus.Components.MessageBoxComponent": 1,
                "Prometheus.Components.MilestoneBlock": 1,
                "Prometheus.Components.NavBar": 1,
                "Prometheus.Components.QueryBuilder": 1,
                "Prometheus.Components.QuillEditor": 1,
                "Prometheus.Component.TextField": 1,
                "Prometheus.Components.TextareaField": 1,
                "Prometheus.Components.TreeList": 1,
                "Prometheus.Controllers.Issue": 1,
                "Issue": 1,
                "Prometheus.Controllers.Index": 1,
                "Calendar": 1,
                "Prometheus.Controllers.Conversation": 1,
                "Conversation": 1,
                "Prometheus.Controllers.Wiki": 1,
                "Wiki": 1,
                "Prometheus.Routes.Index": 1,
                "Prometheus.Routes.Conversation": 1,
                "Prometheus.Routes.Wiki": 1
            },
            "fors": {
                "Issue": 1,
                "Calendar": 1,
                "Conversation": 1,
                "Index": 1,
                "Wiki": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1,
                "Prometheus.Controller": 1,
                "Prometheus.Routes": 1
            },
            "tag": "module",
            "file": "app/routes/app/project/wiki.js",
            "line": 10,
            "description": "This is the route to load the conversations for a project"
        },
        "App.Project.Wiki": {
            "name": "App.Project.Wiki",
            "submodules": {},
            "elements": {},
            "classes": {
                "Prometheus.Routes.Create": 1,
                "Prometheus.Controllers.Create": 1,
                "Create": 1,
                "Prometheus.Controllers.Edit": 1,
                "Edit": 1,
                "Index": 1,
                "Prometheus.Controllers.Page": 1,
                "page": 1,
                "Page": 1,
                "Prometheus.Routes.Page": 1,
                "Prometheus.Routes.Wiki.Create": 1,
                "Prometheus.Routes.Edit": 1
            },
            "fors": {
                "Create": 1,
                "Edit": 1,
                "Index": 1,
                "page": 1,
                "Page": 1,
                "Prometheus.Routes.Wiki.Create": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1,
                "Prometheus.Routes": 1
            },
            "tag": "module",
            "file": "app/routes/app/project/wiki/edit.js",
            "line": 8,
            "description": "This is the create route for the wiki pages section\n\nIt is loaded when a user tried to navigate to the route\n\n:projectId/wiki/create e.g. acme.projects4.me/app/123/wiki/create"
        },
        "App": {
            "name": "App",
            "submodules": {},
            "elements": {},
            "classes": {
                "Prometheus.Routes.Module": 1,
                "Prometheus.Controller.Module": 1,
                "Module": 1,
                "Prometheus.Controllers.Projectlist": 1,
                "Projectlist": 1,
                "Prometheus.Controller.App": 1,
                "Prometheus.Controller.Signin": 1,
                "Prometheus.Helpers.CountVotes": 1,
                "Prometheus.Helpers.GetDate": 1,
                "Prometheus.Helpers.GetIssuecount": 1,
                "Prometheus.Helpers.GetPage": 1,
                "Prometheus.Helpers.GetProp": 1,
                "Prometheus.Helpers.GetRole": 1,
                "Prometheus.Helpers.GetTimelog": 1,
                "Prometheus.Helpers.GetWiki": 1,
                "Prometheus.Helpers.IfMatch": 1,
                "Prometheus.Helpers.NavIcon": 1,
                "Prometheus.Helpers.NotLast": 1,
                "Prometheus.Helpers.PriorityIcon": 1,
                "Prometheus.Helpers.SortableClass": 1,
                "Prometheus.Helpers.TranslateComment": 1,
                "Prometheus.Helpers.UserCreated": 1,
                "Prometheus.Initializers.InjectRouter": 1,
                "Prometheus.Initializers.Initializer": 1,
                "InjectRouter": 1,
                "Prometheus.Initializers.JavascriptBehaviors": 1,
                "Prometheus.Initializers.SetupLogger": 1,
                "Prometheus.Routes.Project": 1,
                "Prometheus.Routes.Projectlist": 1,
                "Prometheus.Routes.App": 1,
                "Prometheus.Routes.Application": 1,
                "Prometheus.Routes.AppRoute": 1,
                "Prometheus.Serializers.Application": 1,
                "Prometheus.Services.CurrentUser": 1,
                "Prometheus.Services.RelatedField": 1
            },
            "fors": {
                "Module": 1,
                "Projectlist": 1,
                "App": 1,
                "Prometheus.Controller.App": 1,
                "Signin": 1,
                "Prometheus.Controller.Signin": 1,
                "Initializer": 1,
                "InjectRouter": 1,
                "JavascriptBehaviors": 1,
                "SetupLogger": 1,
                "Prometheus.Models.Project": 1,
                "Application": 1,
                "Prometheus.Routes.Application": 1,
                "CurrentUser": 1,
                "Prometheus.Services.CurrentUser": 1,
                "RelatedField": 1,
                "Prometheus.Services.RelatedField": 1
            },
            "namespaces": {
                "Prometheus.Controllers": 1,
                "Prometheus.Controller": 1,
                "Prometheus.Helpers": 1,
                "Prometheus.Initializers": 1,
                "Prometheus.Routes": 1,
                "Prometheus.Serializers": 1,
                "Prometheus.Services": 1,
                "Prometheus.Utils": 1
            },
            "tag": "module",
            "file": "app/serializers/application.js",
            "line": 8,
            "description": "The module route, it is loaded when a user tried to navigate to the route :module e.g. acme.projects4.me/app/projects/"
        },
        "i18n": {
            "name": "i18n",
            "submodules": {},
            "elements": {},
            "classes": {
                "Prometheus.Locales.en": 1,
                "Prometheus.Models.Activity": 1,
                "Prometheus.Models.Comment": 1,
                "Prometheus.Models.CommentModel": 1,
                "Prometheus.Models.Conversationroom": 1,
                "Prometheus.Models.Issue": 1,
                "IssueModel": 1,
                "Prometheus.Models.Issuetype": 1,
                "Prometheus.Models.Membership": 1,
                "Prometheus.Models.Milestone": 1,
                "Prometheus.Models.Project": 1,
                "Prometheus.Models.Role": 1,
                "Prometheus.Models.Tagged": 1,
                "Prometheus.Models.Timelog": 1,
                "Prometheus.Models.Token": 1,
                "Prometheus.Model.User": 1,
                "Prometheus.Models.Vote": 1,
                "Prometheus.Models.Wiki": 1
            },
            "fors": {
                "Activity": 1,
                "Prometheus.Models.Activity": 1,
                "Comment": 1,
                "Prometheus.Models.Comment": 1,
                "CommentModel": 1,
                "Conversationroom": 1,
                "Prometheus.Models.Conversationroom": 1,
                "Issue": 1,
                "IssueModel": 1,
                "Issuetype": 1,
                "Prometheus.Models.Issuetype": 1,
                "Membership": 1,
                "Prometheus.Models.Membership": 1,
                "Milestone": 1,
                "Prometheus.Models.Milestone": 1,
                "Project": 1,
                "Prometheus.Models.Project": 1,
                "Role": 1,
                "Prometheus.Models.Role": 1,
                "Tagged": 1,
                "Prometheus.Models.Tagged": 1,
                "Timelog": 1,
                "Prometheus.Models.Timelog": 1,
                "Token": 1,
                "Prometheus.Models.Token": 1,
                "User": 1,
                "Prometheus.Model.User": 1,
                "Vote": 1,
                "Prometheus.Models.Vote": 1,
                "Wiki": 1
            },
            "namespaces": {
                "Prometheus.Locales": 1,
                "Prometheus.Models": 1,
                "Prometheus.Model": 1,
                "Prometheus.Routes": 1
            },
            "tag": "module",
            "file": "app/models/wiki.js",
            "line": 7,
            "description": "This is the english language tranlations for the project. For now they are\nhard coded but in future we would want to load them from the server and\nwe would like to allow people to include their own translations.\n\nThis should also be possible for plugins to have their own translations.\n\nNeed to see if we can support rtl"
        },
        "App.Project.Issue": {
            "name": "App.Project.Issue",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {
                "Index": 1
            },
            "namespaces": {
                "Prometheus.Routes": 1
            },
            "tag": "module",
            "file": "app/routes/app/project/issue/create.js",
            "line": 7,
            "description": "This is the route that will handle the creation of new issues"
        },
        "Data": {
            "name": "Data",
            "submodules": {},
            "elements": {},
            "classes": {
                "Prometheus.Utils.Modeltotree": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Utils": 1
            },
            "tag": "module",
            "file": "app/utils/data/modeltotree.js",
            "line": 5,
            "description": "This utility class is used to convert model objects to tree"
        },
        "Metadata": {
            "name": "Metadata",
            "submodules": {},
            "elements": {},
            "classes": {
                "Prometheus.Utils.Metadata": 1,
                "Metadata": 1
            },
            "fors": {
                "Metadata": 1
            },
            "namespaces": {
                "Prometheus.Utils": 1
            },
            "tag": "module",
            "file": "app/utils/metadata/metadata.js",
            "line": 8,
            "description": "The meta is the main object storing the different types of metadata that the\napplication makes use of"
        },
        "Navigation": {
            "name": "Navigation",
            "submodules": {},
            "elements": {},
            "classes": {
                "Prometheus.Utils.Navigation": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus.Utils": 1
            },
            "tag": "module",
            "file": "app/utils/navigation/navigation.js",
            "line": 8,
            "description": "This utility class is used for help the interaction with the API"
        },
        "Query": {
            "name": "Query",
            "submodules": {},
            "elements": {},
            "classes": {
                "Prometheus.Utils.Builder": 1,
                "Builder": 1,
                "Prometheus.Utils.Parser": 1,
                "Parser": 1
            },
            "fors": {
                "Builder": 1,
                "Parser": 1
            },
            "namespaces": {
                "Prometheus.Utils": 1
            },
            "tag": "module",
            "file": "app/utils/query/parser.js",
            "line": 7,
            "description": "This utility class is used for help interact with the plugin jQuery Query\nBuilder querybuilder.js.org"
        },
        "Validator": {
            "name": "Validator",
            "submodules": {},
            "elements": {},
            "classes": {
                "Prometheus.Utils.Fields": 1,
                "Prometheus.Application": 1
            },
            "fors": {},
            "namespaces": {
                "Prometheus": 1
            },
            "tag": "module",
            "file": "app/app.js",
            "line": 12,
            "description": "This utility provide data validation for the fields in the system"
        }
    },
    "classes": {
        "Prometheus.Adapter.Application": {
            "name": "Prometheus.Adapter.Application",
            "shortname": "Prometheus.Adapter.Application",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Adapter",
            "file": "app/adapters/application.js",
            "line": 10,
            "description": "This is the application adapter that fetches the information from the API.\nIn order to be able to handle data effectively we are using the JSONAPI\nstandards.",
            "extends": "DS.JSONAPIAdapter",
            "uses": [
                "DataAdapterMixin"
            ],
            "todo": [
                "retrieve the host name from the configurations."
            ],
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Adapter.ApplicationAdapter": {
            "name": "Prometheus.Adapter.ApplicationAdapter",
            "shortname": "ApplicationAdapter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Adapter"
        },
        "Prometheus.Authenticators.OAuth2Authenticator": {
            "name": "Prometheus.Authenticators.OAuth2Authenticator",
            "shortname": "Prometheus.Authenticators.OAuth2Authenticator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Authenticators",
            "file": "app/authenticators/oauth2.js",
            "line": 19,
            "description": "This class allows the application to authenticate with using a password grant",
            "extends": "OAuth2PasswordGrant",
            "author": "Hammad Hassan gollomer@gmail.com"
        },
        "Prometheus.Authorizers.OAuth2Authorizer": {
            "name": "Prometheus.Authorizers.OAuth2Authorizer",
            "shortname": "Prometheus.Authorizers.OAuth2Authorizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Authorizers",
            "file": "app/authorizers/oauth2.js",
            "line": 7,
            "description": "This class allows the application to authenticate with using a password grant",
            "extends": "OAuth2Bearer",
            "author": "Hammad Hassan gollomer@gmail.com"
        },
        "Prometheus.Components.ActionMenu": {
            "name": "Prometheus.Components.ActionMenu",
            "shortname": "ActionMenu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.ActivityBlock": {
            "name": "Prometheus.Components.ActivityBlock",
            "shortname": "ActivityBlock",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.BootstrapModal": {
            "name": "Prometheus.Components.BootstrapModal",
            "shortname": "BootstrapModal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.ChartEstimatedspent": {
            "name": "Prometheus.Components.ChartEstimatedspent",
            "shortname": "Prometheus.Components.ChartEstimatedspent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components",
            "file": "app/components/chart-estimatedspent.js",
            "line": 8,
            "description": "This component is used to render the issue ratio chart in the application",
            "extends": "Ember.Component",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Components.ChartIssueratio": {
            "name": "Prometheus.Components.ChartIssueratio",
            "shortname": "ChartIssueratio",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components",
            "file": "app/components/chart-issueratio.js",
            "line": 8,
            "description": "This component is used to render the issue ratio chart in the application",
            "extends": "Ember.Component",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Component.ChatBox": {
            "name": "Prometheus.Component.ChatBox",
            "shortname": "ChatBox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Component"
        },
        "Prometheus.Components.CheckboxField": {
            "name": "Prometheus.Components.CheckboxField",
            "shortname": "CheckboxField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.ContentEditable": {
            "name": "Prometheus.Components.ContentEditable",
            "shortname": "ContentEditable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.FieldCheckbox": {
            "name": "Prometheus.Components.FieldCheckbox",
            "shortname": "FieldCheckbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.FieldDate": {
            "name": "Prometheus.Components.FieldDate",
            "shortname": "FieldDate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.FieldImage": {
            "name": "Prometheus.Components.FieldImage",
            "shortname": "FieldImage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.FieldRadio": {
            "name": "Prometheus.Components.FieldRadio",
            "shortname": "FieldRadio",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.FieldText": {
            "name": "Prometheus.Components.FieldText",
            "shortname": "FieldText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.FieldTextarea": {
            "name": "Prometheus.Components.FieldTextarea",
            "shortname": "FieldTextarea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.FieldView": {
            "name": "Prometheus.Components.FieldView",
            "shortname": "FieldView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.FormFields": {
            "name": "Prometheus.Components.FormFields",
            "shortname": "FormFields",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.MessageBox": {
            "name": "Prometheus.Components.MessageBox",
            "shortname": "MessageBox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.MessageBoxComponent": {
            "name": "Prometheus.Components.MessageBoxComponent",
            "shortname": "MessageBoxComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.MilestoneBlock": {
            "name": "Prometheus.Components.MilestoneBlock",
            "shortname": "MilestoneBlock",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.NavBar": {
            "name": "Prometheus.Components.NavBar",
            "shortname": "NavBar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.QueryBuilder": {
            "name": "Prometheus.Components.QueryBuilder",
            "shortname": "QueryBuilder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.QuillEditor": {
            "name": "Prometheus.Components.QuillEditor",
            "shortname": "Prometheus.Components.QuillEditor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components",
            "file": "app/components/quill-editor.js",
            "line": 7,
            "description": "This component is used to render the quill editor in the application.",
            "extends": "Ember.Component",
            "author": "Hammad Hassan <gollomer@gmail.com>",
            "todo": [
                "allow passing of the parameters to this component"
            ]
        },
        "Prometheus.Component.TextField": {
            "name": "Prometheus.Component.TextField",
            "shortname": "TextField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Component"
        },
        "Prometheus.Components.TextareaField": {
            "name": "Prometheus.Components.TextareaField",
            "shortname": "TextareaField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Components.TreeList": {
            "name": "Prometheus.Components.TreeList",
            "shortname": "TreeList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Components"
        },
        "Prometheus.Controllers.Issue": {
            "name": "Prometheus.Controllers.Issue",
            "shortname": "Prometheus.Controllers.Issue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Controllers",
            "file": "app/controllers/app/project/issue/index.js",
            "line": 11,
            "description": "This controller is used to provide the interaction between the template and\nthe route. The basic features that this controller provide are pagination,\nsorting and filtering the data.",
            "extends": "Ember.Controller",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Issue": {
            "name": "Issue",
            "shortname": "Issue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": ""
        },
        "Prometheus.Controllers.Create": {
            "name": "Prometheus.Controllers.Create",
            "shortname": "Prometheus.Controllers.Create",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project.Wiki",
            "namespace": "Prometheus.Controllers",
            "file": "app/controllers/app/project/wiki/create.js",
            "line": 7,
            "description": "The controller for the wiki create route, it is loaded when a user clicks on\ncreate button\ne.g. acme.projects4.me/app/1/wiki/create",
            "extends": "Ember.Controller",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Create": {
            "name": "Create",
            "shortname": "Create",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project.Wiki",
            "namespace": ""
        },
        "Prometheus.Controllers.Edit": {
            "name": "Prometheus.Controllers.Edit",
            "shortname": "Prometheus.Controllers.Edit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project.Wiki",
            "namespace": "Prometheus.Controllers",
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 10,
            "description": "The controller for the wiki edit route, it is loaded when a user clicks on the\nedit button on the wiki page\ne.g. acme.projects4.me/app/1/wiki/edit/Home",
            "extends": "Ember.Controller",
            "todo": [
                "Minimize the code"
            ]
        },
        "Edit": {
            "name": "Edit",
            "shortname": "Edit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project.Wiki",
            "namespace": ""
        },
        "Prometheus.Controllers.Index": {
            "name": "Prometheus.Controllers.Index",
            "shortname": "Prometheus.Controllers.Index",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Controllers",
            "file": "app/controllers/app/project/index.js",
            "line": 7,
            "description": "This is the index page of the project, index page for the project is\nbasically the detail page for it.",
            "extends": "Ember.Controller",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Index": {
            "name": "Index",
            "shortname": "Index",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project.Wiki",
            "namespace": ""
        },
        "Prometheus.Controllers.Page": {
            "name": "Prometheus.Controllers.Page",
            "shortname": "Prometheus.Controllers.Page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project.Wiki",
            "namespace": "Prometheus.Controllers",
            "file": "app/controllers/app/project/wiki/page.js",
            "line": 9,
            "description": "The controller for the wiki page route, it is loaded when a user tried to\nnavigate to a particular wiki page\n\ne.g. acme.projects4.me/app/1/wiki/Home\nBy default this controller is configured to load the project selection",
            "extends": "Ember.Controller",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "page": {
            "name": "page",
            "shortname": "page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project.Wiki",
            "namespace": ""
        },
        "Page": {
            "name": "Page",
            "shortname": "Page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project.Wiki",
            "namespace": ""
        },
        "Prometheus.Controllers.Calendar": {
            "name": "Prometheus.Controllers.Calendar",
            "shortname": "Prometheus.Controllers.Calendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Controllers",
            "file": "app/controllers/app/project/calendar.js",
            "line": 7,
            "description": "This is the controller for the calendar controller route",
            "extends": "Ember.Controller",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Calendar": {
            "name": "Calendar",
            "shortname": "Calendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": ""
        },
        "Prometheus.Controllers.Conversation": {
            "name": "Prometheus.Controllers.Conversation",
            "shortname": "Prometheus.Controllers.Conversation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Controllers",
            "file": "app/controllers/app/project/conversation.js",
            "line": 7,
            "description": "This is the controller for the conversation controller route",
            "extends": "Ember.Controller",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Conversation": {
            "name": "Conversation",
            "shortname": "Conversation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": ""
        },
        "Prometheus.Controllers.Wiki": {
            "name": "Prometheus.Controllers.Wiki",
            "shortname": "Prometheus.Controllers.Wiki",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Controllers",
            "file": "app/controllers/app/project/wiki.js",
            "line": 7,
            "description": "The controller for the wiki route, it is loaded when a user tried to navigate to the route\nwiki\ne.g. acme.projects4.me/app/1/wiki\nBy default this controller is configured to load the project selection",
            "extends": "Ember.Controller"
        },
        "Wiki": {
            "name": "Wiki",
            "shortname": "Wiki",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": ""
        },
        "Prometheus.Controller.Module": {
            "name": "Prometheus.Controller.Module",
            "shortname": "Prometheus.Controller.Module",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Controller",
            "file": "app/controllers/app/module.js",
            "line": 12,
            "description": "The controller for the module route, it is loaded when a user tried to navigate to the route\n:module\ne.g. acme.projects4.me/app/projects\nBy default this controller is configured to load the list view, if a custom implementation of\nlist view is required then it must extend from this class",
            "extends": "Ember.Controller",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Module": {
            "name": "Module",
            "shortname": "Module",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": ""
        },
        "Prometheus.Controllers.Projectlist": {
            "name": "Prometheus.Controllers.Projectlist",
            "shortname": "Prometheus.Controllers.Projectlist",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Controllers",
            "file": "app/controllers/app/projectlist.js",
            "line": 11,
            "description": "The controller for the module route, it is loaded when a user tried to navigate to the route\n:module\ne.g. acme.projects4.me/app/projects\nBy default this controller is configured to load the list view, if a custom implementation of\nlist view is required then it must extend from this class",
            "extends": "Ember.Controller",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Projectlist": {
            "name": "Projectlist",
            "shortname": "Projectlist",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": ""
        },
        "Prometheus.Controller.App": {
            "name": "Prometheus.Controller.App",
            "shortname": "App",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        "Prometheus.Controller.Signin": {
            "name": "Prometheus.Controller.Signin",
            "shortname": "Signin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        "Prometheus.Helpers.CountVotes": {
            "name": "Prometheus.Helpers.CountVotes",
            "shortname": "Prometheus.Helpers.CountVotes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/count-votes.js",
            "line": 22,
            "description": "The object that provides the getWiki helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.GetDate": {
            "name": "Prometheus.Helpers.GetDate",
            "shortname": "Prometheus.Helpers.GetDate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/get-date.js",
            "line": 33,
            "description": "The object that provides the getDate helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.GetIssuecount": {
            "name": "Prometheus.Helpers.GetIssuecount",
            "shortname": "Prometheus.Helpers.GetIssuecount",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/get-issuecount.js",
            "line": 39,
            "description": "The object that provides the getIssuecount helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.GetPage": {
            "name": "Prometheus.Helpers.GetPage",
            "shortname": "Prometheus.Helpers.GetPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/get-page.js",
            "line": 29,
            "description": "The object that provides the getPage helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.GetProp": {
            "name": "Prometheus.Helpers.GetProp",
            "shortname": "Prometheus.Helpers.GetProp",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/get-prop.js",
            "line": 21,
            "description": "This is the object that provides access to the function getProp",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gamilcom",
            "deprecated": true
        },
        "Prometheus.Helpers.GetRole": {
            "name": "Prometheus.Helpers.GetRole",
            "shortname": "Prometheus.Helpers.GetRole",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/get-role.js",
            "line": 25,
            "description": "The object that provides the getRole helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.GetTimelog": {
            "name": "Prometheus.Helpers.GetTimelog",
            "shortname": "Prometheus.Helpers.GetTimelog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/get-timelog.js",
            "line": 41,
            "description": "The object that provides the getTimelog helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.GetWiki": {
            "name": "Prometheus.Helpers.GetWiki",
            "shortname": "Prometheus.Helpers.GetWiki",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/get-wiki.js",
            "line": 23,
            "description": "The object that provides the getWiki helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.IfMatch": {
            "name": "Prometheus.Helpers.IfMatch",
            "shortname": "Prometheus.Helpers.IfMatch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/if-match.js",
            "line": 20,
            "description": "The object that provides the ifMatch helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.NavIcon": {
            "name": "Prometheus.Helpers.NavIcon",
            "shortname": "Prometheus.Helpers.NavIcon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/nav-icon.js",
            "line": 30,
            "description": "The object that provides the navIcon helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.NotLast": {
            "name": "Prometheus.Helpers.NotLast",
            "shortname": "Prometheus.Helpers.NotLast",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/object-empty.js",
            "line": 28,
            "description": "The object that provides the notLast helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.PriorityIcon": {
            "name": "Prometheus.Helpers.PriorityIcon",
            "shortname": "Prometheus.Helpers.PriorityIcon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/static-list.js",
            "line": 19,
            "description": "The object that provides the PriorityIcon helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.SortableClass": {
            "name": "Prometheus.Helpers.SortableClass",
            "shortname": "Prometheus.Helpers.SortableClass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/sortable-class.js",
            "line": 27,
            "description": "The object that provides the sortableClass helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.TranslateComment": {
            "name": "Prometheus.Helpers.TranslateComment",
            "shortname": "Prometheus.Helpers.TranslateComment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/translate-comment.js",
            "line": 74,
            "description": "The object that provides the getWiki helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Helpers.UserCreated": {
            "name": "Prometheus.Helpers.UserCreated",
            "shortname": "Prometheus.Helpers.UserCreated",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Helpers",
            "file": "app/helpers/user-created.js",
            "line": 21,
            "description": "The object that provides the getWiki helper function",
            "extends": "Ember.Helper.helper",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Initializers.InjectRouter": {
            "name": "Prometheus.Initializers.InjectRouter",
            "shortname": "Prometheus.Initializers.InjectRouter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Initializers",
            "file": "app/initializers/inject-router.js",
            "line": 20,
            "description": "This is the initializer for route, we use this function to inject router in\nour components",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Initializers.Initializer": {
            "name": "Prometheus.Initializers.Initializer",
            "shortname": "Initializer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Initializers"
        },
        "InjectRouter": {
            "name": "InjectRouter",
            "shortname": "InjectRouter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": ""
        },
        "Prometheus.Initializers.JavascriptBehaviors": {
            "name": "Prometheus.Initializers.JavascriptBehaviors",
            "shortname": "JavascriptBehaviors",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Initializers"
        },
        "Prometheus.Initializers.SetupLogger": {
            "name": "Prometheus.Initializers.SetupLogger",
            "shortname": "SetupLogger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Initializers"
        },
        "Prometheus.Locales.en": {
            "name": "Prometheus.Locales.en",
            "shortname": "Prometheus.Locales.en",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Locales",
            "file": "app/locales/en/translations.js",
            "line": 5,
            "description": "This is the english language tranlations for the project. For now they are\nhard coded but in future we would want to load them from the server and\nwe would like to allow people to include their own translations.\n\nThis should also be possible for plugins to have their own translations.\n\nNeed to see if we can support rtl",
            "todo": [
                "Support customizations"
            ],
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Models.Activity": {
            "name": "Prometheus.Models.Activity",
            "shortname": "Activity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        "Prometheus.Models.Comment": {
            "name": "Prometheus.Models.Comment",
            "shortname": "Comment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        "Prometheus.Models.CommentModel": {
            "name": "Prometheus.Models.CommentModel",
            "shortname": "CommentModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        "Prometheus.Models.Conversationroom": {
            "name": "Prometheus.Models.Conversationroom",
            "shortname": "Conversationroom",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        "Prometheus.Models.Issue": {
            "name": "Prometheus.Models.Issue",
            "shortname": "Prometheus.Models.Issue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models",
            "file": "app/models/issue.js",
            "line": 7,
            "description": "The issue model",
            "extends": "DS.Model",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "IssueModel": {
            "name": "IssueModel",
            "shortname": "IssueModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": ""
        },
        "Prometheus.Models.Issuetype": {
            "name": "Prometheus.Models.Issuetype",
            "shortname": "Issuetype",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        "Prometheus.Models.Membership": {
            "name": "Prometheus.Models.Membership",
            "shortname": "Membership",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        "Prometheus.Models.Milestone": {
            "name": "Prometheus.Models.Milestone",
            "shortname": "Milestone",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        "Prometheus.Models.Project": {
            "name": "Prometheus.Models.Project",
            "shortname": "Project",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        "Prometheus.Models.Role": {
            "name": "Prometheus.Models.Role",
            "shortname": "Role",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        "Prometheus.Models.Tagged": {
            "name": "Prometheus.Models.Tagged",
            "shortname": "Tagged",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models",
            "file": "app/models/tagged.js",
            "line": 7,
            "description": "The tagged model. This model is used to maint the relationship between tags\nand the related entities.",
            "extends": "DS.Model",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Models.Timelog": {
            "name": "Prometheus.Models.Timelog",
            "shortname": "Timelog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        "Prometheus.Models.Token": {
            "name": "Prometheus.Models.Token",
            "shortname": "Token",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        "Prometheus.Model.User": {
            "name": "Prometheus.Model.User",
            "shortname": "User",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Model"
        },
        "Prometheus.Models.Vote": {
            "name": "Prometheus.Models.Vote",
            "shortname": "Vote",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        "Prometheus.Models.Wiki": {
            "name": "Prometheus.Models.Wiki",
            "shortname": "Prometheus.Models.Wiki",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "i18n",
            "namespace": "Prometheus.Models",
            "file": "app/models/wiki.js",
            "line": 7,
            "description": "The wiki model",
            "extends": "DS.Model",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Routes.Create": {
            "name": "Prometheus.Routes.Create",
            "shortname": "Prometheus.Routes.Create",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project.Wiki",
            "namespace": "Prometheus.Routes",
            "file": "app/routes/app/project/wiki/create.js",
            "line": 8,
            "description": "This is the create route for the wiki pages section\n\nIt is loaded when a user tried to navigate to the route\n\n:projectId/wiki/create e.g. acme.projects4.me/app/123/wiki/create",
            "extends": "App",
            "author": "Hammad Hassan <gollomer@gamil.com>"
        },
        "Prometheus.Routes.Index": {
            "name": "Prometheus.Routes.Index",
            "shortname": "Prometheus.Routes.Index",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Routes",
            "file": "app/routes/app/project/index.js",
            "line": 7,
            "description": "The wiki route",
            "extends": "App",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Routes.Page": {
            "name": "Prometheus.Routes.Page",
            "shortname": "Prometheus.Routes.Page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project.Wiki",
            "namespace": "Prometheus.Routes",
            "file": "app/routes/app/project/wiki/page.js",
            "line": 7,
            "description": "The module route, it is loaded when a user tried to navigate to the route\n:wikiName e.g. acme.projects4.me/app/wiki/1/Home",
            "extends": "App",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Routes.Wiki.Create": {
            "name": "Prometheus.Routes.Wiki.Create",
            "shortname": "Prometheus.Routes.Wiki.Create",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project.Wiki",
            "namespace": ""
        },
        "Prometheus.Routes.Edit": {
            "name": "Prometheus.Routes.Edit",
            "shortname": "Prometheus.Routes.Edit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project.Wiki",
            "namespace": "Prometheus.Routes",
            "file": "app/routes/app/project/wiki/edit.js",
            "line": 8,
            "description": "The wiki's edit page route. This route retrieves the information and displays\nit across.",
            "extends": "Page",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Routes.Calendar": {
            "name": "Prometheus.Routes.Calendar",
            "shortname": "Prometheus.Routes.Calendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Routes",
            "file": "app/routes/app/project/calendar.js",
            "line": 7,
            "description": "This is the route to load the conversations for a project",
            "extends": "AppRoute",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Routes.Conversation": {
            "name": "Prometheus.Routes.Conversation",
            "shortname": "Prometheus.Routes.Conversation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Routes",
            "file": "app/routes/app/project/conversation.js",
            "line": 7,
            "description": "This is the route to load the conversations for a project",
            "extends": "AppRoute",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Routes.Wiki": {
            "name": "Prometheus.Routes.Wiki",
            "shortname": "Prometheus.Routes.Wiki",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App.Project",
            "namespace": "Prometheus.Routes",
            "file": "app/routes/app/project/wiki.js",
            "line": 10,
            "description": "The project wiki page route, it is loaded when a user tried to navigate to\nthe route :projectId e.g. acme.projects4.me/app/wiki/:projectId",
            "extends": "Ember.Route",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Routes.Module": {
            "name": "Prometheus.Routes.Module",
            "shortname": "Prometheus.Routes.Module",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Routes",
            "file": "app/routes/app/module.js",
            "line": 10,
            "description": "The module route, it is loaded when a user tried to navigate to the route :module e.g. acme.projects4.me/app/projects/",
            "extends": "AppRoute",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Routes.Project": {
            "name": "Prometheus.Routes.Project",
            "shortname": "Prometheus.Routes.Project",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Routes",
            "file": "app/routes/app/project.js",
            "line": 7,
            "description": "The wiki route",
            "extends": "App",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Routes.Projectlist": {
            "name": "Prometheus.Routes.Projectlist",
            "shortname": "Prometheus.Routes.Projectlist",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Routes",
            "file": "app/routes/app/projectlist.js",
            "line": 10,
            "description": "The module route, it is loaded when a user tried to navigate to\nthe route :module e.g. acme.projects4.me/app/projects/",
            "extends": "AppRoute",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Routes.App": {
            "name": "Prometheus.Routes.App",
            "shortname": "Prometheus.Routes.App",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Routes",
            "file": "app/routes/app.js",
            "line": 8,
            "description": "This is the app route, the app route is used",
            "extends": "Ember.Route",
            "uses": [
                "AuthenticatedRouteMixin"
            ],
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Routes.Application": {
            "name": "Prometheus.Routes.Application",
            "shortname": "Application",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Routes"
        },
        "Prometheus.Routes.AppRoute": {
            "name": "Prometheus.Routes.AppRoute",
            "shortname": "Prometheus.Routes.AppRoute",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Routes",
            "file": "app/routes/signin.js",
            "line": 8,
            "description": "This is the app route, the app route is used",
            "extends": "Ember.Route",
            "uses": [
                "UnauthenticatedRouteMixin"
            ],
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Serializers.Application": {
            "name": "Prometheus.Serializers.Application",
            "shortname": "Prometheus.Serializers.Application",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Serializers",
            "file": "app/serializers/application.js",
            "line": 8,
            "description": "This is the application serializer, we are using it to override some of the\nnaming conventions followed by EmberJs",
            "extends": "DS.JSONAPISerializer",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Services.CurrentUser": {
            "name": "Prometheus.Services.CurrentUser",
            "shortname": "CurrentUser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Services"
        },
        "Prometheus.Services.RelatedField": {
            "name": "Prometheus.Services.RelatedField",
            "shortname": "RelatedField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "Prometheus.Services"
        },
        "Prometheus.Utils.Modeltotree": {
            "name": "Prometheus.Utils.Modeltotree",
            "shortname": "Prometheus.Utils.Modeltotree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Data",
            "namespace": "Prometheus.Utils",
            "file": "app/utils/data/modeltotree.js",
            "line": 5,
            "description": "This utility class is used to convert model objects to tree",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Utils.Metadata": {
            "name": "Prometheus.Utils.Metadata",
            "shortname": "Prometheus.Utils.Metadata",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Metadata",
            "namespace": "Prometheus.Utils",
            "file": "app/utils/metadata/metadata.js",
            "line": 8,
            "description": "The meta is the main object storing the different types of metadata that the\napplication makes use of",
            "extends": "Ember.Object",
            "author": "Hammad Hassan <gollomer@gmail.com>",
            "todo": [
                "Allow the metadata to be retrived from the server"
            ]
        },
        "Metadata": {
            "name": "Metadata",
            "shortname": "Metadata",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Metadata",
            "namespace": ""
        },
        "Prometheus.Utils.Navigation": {
            "name": "Prometheus.Utils.Navigation",
            "shortname": "Prometheus.Utils.Navigation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Navigation",
            "namespace": "Prometheus.Utils",
            "file": "app/utils/navigation/navigation.js",
            "line": 8,
            "description": "This utility class is used for help the interaction with the API",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Utils.Builder": {
            "name": "Prometheus.Utils.Builder",
            "shortname": "Prometheus.Utils.Builder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Query",
            "namespace": "Prometheus.Utils",
            "file": "app/utils/query/builder.js",
            "line": 7,
            "description": "This utility class is used for help interact with the plugin jQuery Query\nBuilder querybuilder.js.org",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Builder": {
            "name": "Builder",
            "shortname": "Builder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Query",
            "namespace": ""
        },
        "Prometheus.Utils.Parser": {
            "name": "Prometheus.Utils.Parser",
            "shortname": "Prometheus.Utils.Parser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Query",
            "namespace": "Prometheus.Utils",
            "file": "app/utils/query/parser.js",
            "line": 7,
            "description": "This utility class is used for help the convert the query objects created by\nthe plugin jQuery Query Builder querybuilder.js.org and vice versa",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Parser": {
            "name": "Parser",
            "shortname": "Parser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Query",
            "namespace": ""
        },
        "Prometheus.Utils.Fields": {
            "name": "Prometheus.Utils.Fields",
            "shortname": "Prometheus.Utils.Fields",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validator",
            "namespace": "Prometheus.Utils",
            "file": "app/utils/validator/fields.js",
            "line": 5,
            "description": "This utility provide data validation for the fields in the system",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        },
        "Prometheus.Application": {
            "name": "Prometheus.Application",
            "shortname": "Prometheus.Application",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Validator",
            "namespace": "Prometheus",
            "file": "app/app.js",
            "line": 12,
            "description": "This is the Application variable what is used to extend the Ember Application object",
            "extends": "Ember.Application",
            "author": "Hammad Hassan <gollomer@gmail.com>"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "app/adapters/application.js",
            "line": 24,
            "description": "The namespace of the api.",
            "itemtype": "property",
            "name": "namespace",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Adapter.ApplicationAdapter"
        },
        {
            "file": "app/adapters/application.js",
            "line": 34,
            "description": "Set the authorizer so that the authorization headers are included in all the\noutgoing calls to the API server",
            "itemtype": "property",
            "name": "authorizer",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Adapter.ApplicationAdapter",
            "namespace": "Prometheus.Adapter"
        },
        {
            "file": "app/adapters/application.js",
            "line": 45,
            "description": "The host name of the server where the API is hosted.",
            "itemtype": "property",
            "name": "host",
            "type": "String",
            "access": "private",
            "tagname": "",
            "todo": [
                "Load from the configurations"
            ],
            "class": "Prometheus.Adapter.ApplicationAdapter",
            "namespace": "Prometheus.Adapter"
        },
        {
            "file": "app/adapters/application.js",
            "line": 63,
            "description": "Set the modelName to singular as that is what our server listens to",
            "itemtype": "method",
            "name": "pathForType",
            "params": [
                {
                    "name": "modelName",
                    "description": "The model name that is being fetched",
                    "type": "String"
                }
            ],
            "return": {
                "description": "modelName The singularized modelName",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Adapter.ApplicationAdapter",
            "namespace": "Prometheus.Adapter"
        },
        {
            "file": "app/adapters/application.js",
            "line": 76,
            "description": "This function is called whenever an error message is returned by the server",
            "itemtype": "property",
            "name": "normalizeErrorResponse",
            "access": "private",
            "tagname": "",
            "todo": [
                "If the user is not authorized then take him to the singin page",
                "Take care of the refresh token"
            ],
            "class": "Prometheus.Adapter.ApplicationAdapter",
            "namespace": "Prometheus.Adapter",
            "subprops": [
                {
                    "name": "status",
                    "description": "The status code returned by the API",
                    "type": "String"
                }
            ]
        },
        {
            "file": "app/authenticators/oauth2.js",
            "line": 29,
            "description": "The client_id to be sent to the authentication server",
            "itemtype": "property",
            "name": "clientId",
            "type": "String",
            "default": "null",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Authenticators.OAuth2Authenticator",
            "namespace": "Prometheus.Authenticators"
        },
        {
            "file": "app/authenticators/oauth2.js",
            "line": 39,
            "description": "The client_secret to be sent to the authentication server",
            "itemtype": "property",
            "name": "clientSecret",
            "type": "String",
            "default": "null",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Authenticators.OAuth2Authenticator",
            "namespace": "Prometheus.Authenticators"
        },
        {
            "file": "app/authenticators/oauth2.js",
            "line": 49,
            "description": "The client_secret to be sent to the authentication server",
            "itemtype": "property",
            "name": "clientSecret",
            "type": "String",
            "default": "null",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Authenticators.OAuth2Authenticator",
            "namespace": "Prometheus.Authenticators"
        },
        {
            "file": "app/authenticators/oauth2.js",
            "line": 59,
            "description": "Authenticates the session with the specified `identification`, `password`\nand optional `scope`; issues a `POST` request to the",
            "itemtype": "method",
            "name": "authenticate",
            "params": [
                {
                    "name": "identification",
                    "description": "The resource owner username",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "The resource owner password",
                    "type": "String"
                },
                {
                    "name": "scope",
                    "description": "The scope of the access request (see [RFC 6749, section 3.3](http://tools.ietf.org/html/rfc6749#section-3.3))",
                    "type": "String|Array"
                },
                {
                    "name": "headers",
                    "description": "Optional headers that particular backends may require (for example sending 2FA challenge responses)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise that when it resolves results in the session becoming authenticated",
                "type": "Ember.RSVP.Promise"
            },
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Authenticators.OAuth2Authenticator",
            "namespace": "Prometheus.Authenticators"
        },
        {
            "file": "app/components/action-menu.js",
            "line": 19,
            "description": "The events that this component is listing to",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ActionMenu"
        },
        {
            "file": "app/components/action-menu.js",
            "line": 29,
            "description": "Allowing capture of all possible event and simply forwarding them",
            "itemtype": "method",
            "name": "onAction",
            "params": [
                {
                    "name": "action",
                    "description": "delegate the specified event over to the controller",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ActionMenu"
        },
        {
            "file": "app/components/activity-block.js",
            "line": 19,
            "description": "The i18n library service that is used in order to get the translations",
            "itemtype": "property",
            "name": "i18n",
            "type": "Ember.Service",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ActivityBlock"
        },
        {
            "file": "app/components/activity-block.js",
            "line": 29,
            "description": "We need the compoent to render inside an li so that the UI does not break",
            "itemtype": "property",
            "name": "tagName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ActivityBlock",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/activity-block.js",
            "line": 39,
            "description": "This is the layout name that determines the HBS file to be rendered, we are\nusing this so that we can created dynamic activty blockes without having to\ncheck for the type using if else statements that can be very taxing as the\nnumber of activities in the system can grow and comparing the type against\neach possible combination can be very taxing",
            "itemtype": "property",
            "name": "layoutName",
            "type": "function",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ActivityBlock",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/bootstrap-modal.js",
            "line": 17,
            "description": "Show the modal",
            "itemtype": "method",
            "name": "show",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.BootstrapModal",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/bootstrap-modal.js",
            "line": 29,
            "description": "These are the actions supported by this components",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.BootstrapModal"
        },
        {
            "file": "app/components/bootstrap-modal.js",
            "line": 39,
            "description": "This action is captures the confirm button and send it forward to be\nhandled by the controller",
            "itemtype": "method",
            "name": "confirm",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.BootstrapModal"
        },
        {
            "file": "app/components/chart-estimatedspent.js",
            "line": 18,
            "description": "The i18n library service that is used in order to get the translations",
            "itemtype": "property",
            "name": "i18n",
            "type": "Ember.Service",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio"
        },
        {
            "file": "app/components/chart-estimatedspent.js",
            "line": 28,
            "description": "These are the classes the must be registered with the component",
            "itemtype": "property",
            "name": "classNames",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-estimatedspent.js",
            "line": 38,
            "description": "These are the attributes that are bound with the element",
            "itemtype": "property",
            "name": "attributeBindings",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-estimatedspent.js",
            "line": 48,
            "description": "The tag name of this component",
            "itemtype": "property",
            "name": "tagName",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-estimatedspent.js",
            "line": 58,
            "description": "This function is called when the object is created, we are using this\nfunction to translate the emojis",
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-estimatedspent.js",
            "line": 69,
            "description": "This function is called after the component has been rendered, this is where\nwe initiate the chart",
            "itemtype": "method",
            "name": "didRender",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-estimatedspent.js",
            "line": 94,
            "description": "This function is used in order to retrive the data set for the charting library to use.",
            "itemtype": "method",
            "name": "getDatasets",
            "params": [
                {
                    "name": "issues",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "}",
                "type": "Labels: Array, datasets: [*,*]"
            },
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-estimatedspent.js",
            "line": 169,
            "description": "This function is called after the elements drawn by ember js needs to be deleted, we destroy the chart",
            "itemtype": "method",
            "name": "willDestroyElement",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-estimatedspent.js",
            "line": 182,
            "description": "This function is called after the view rendered must be cleared",
            "itemtype": "method",
            "name": "",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-issueratio.js",
            "line": 18,
            "description": "The i18n library service that is used in order to get the translations",
            "itemtype": "property",
            "name": "i18n",
            "type": "Ember.Service",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-issueratio.js",
            "line": 28,
            "description": "These are the classes the must be registered with the component",
            "itemtype": "property",
            "name": "classNames",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-issueratio.js",
            "line": 38,
            "description": "The tag name of this component",
            "itemtype": "property",
            "name": "tagName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-issueratio.js",
            "line": 48,
            "description": "This function is called when the object is created, we are using this\nfunction to translate the emojis",
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-issueratio.js",
            "line": 59,
            "description": "This function is called after the component has been rendered, this is where\nwe initiate the chart",
            "itemtype": "method",
            "name": "didRender",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-issueratio.js",
            "line": 88,
            "description": "This function used to retrieve the data for the chart library",
            "itemtype": "method",
            "name": "getDatasets",
            "params": [
                {
                    "name": "issues",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "}",
                "type": "Labels: Array, datasets: [*]"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chart-issueratio.js",
            "line": 124,
            "description": "This function is called Ember is destroying the HTML elements rendered, we destroy the object for the chart",
            "itemtype": "method",
            "name": "willDestroElement",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ChartIssueratio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/chat-box.js",
            "line": 17,
            "description": "The i18n library service that is used in order to get the translations",
            "itemtype": "property",
            "name": "i18n",
            "type": "Ember.Service",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Component.ChatBox"
        },
        {
            "file": "app/components/chat-box.js",
            "line": 27,
            "description": "These are the classes the must be registered with the component",
            "itemtype": "property",
            "name": "classNames",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Component.ChatBox",
            "namespace": "Prometheus.Component"
        },
        {
            "file": "app/components/chat-box.js",
            "line": 37,
            "description": "Flag that maintains whether the user is typing or not",
            "itemtype": "property",
            "name": "isUserTyping",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Component.ChatBox",
            "namespace": "Prometheus.Component"
        },
        {
            "file": "app/components/chat-box.js",
            "line": 48,
            "description": "This function is called when the object is created, we are using this\nfunction to translate the emojis",
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Component.ChatBox",
            "namespace": "Prometheus.Component"
        },
        {
            "file": "app/components/checkbox-field.js",
            "line": 23,
            "description": "Adding paramater binding for data-select so that it is disabled on the view and then used to identify selected\nitems",
            "itemtype": "property",
            "name": "attributeBindings",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.CheckboxField"
        },
        {
            "file": "app/components/checkbox-field.js",
            "line": 34,
            "description": "Setup a listerer on field change on initialization",
            "itemtype": "method",
            "name": "onInit",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.CheckboxField"
        },
        {
            "file": "app/components/checkbox-field.js",
            "line": 47,
            "description": "Forward the action to the field-view controller to handle",
            "itemtype": "method",
            "name": "changeEvent",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.CheckboxField"
        },
        {
            "file": "app/components/checkbox-field.js",
            "line": 57,
            "description": "Cleanup the event registered up destruction of the view to avoid memory leaks",
            "itemtype": "method",
            "name": "cleanup",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.CheckboxField"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 18,
            "description": "The tag to be used for this component",
            "itemtype": "property",
            "name": "tagName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 28,
            "description": "The attributes that should be rendered with the element",
            "itemtype": "property",
            "name": "attributeBindings",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 38,
            "description": "The classes to be rendered with the element",
            "itemtype": "property",
            "name": "classNames",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 48,
            "description": "The flag that allows editing",
            "itemtype": "property",
            "name": "editable",
            "type": "Bool",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 58,
            "description": "The flag that controls spell checking",
            "itemtype": "property",
            "name": "checkSpelling",
            "type": "Bool",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 68,
            "description": "The flag that indicates whether a user is typing in the field or not",
            "itemtype": "property",
            "name": "isUserTyping",
            "type": "Bools",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 78,
            "description": "The flag that forces only plaintext to be used",
            "itemtype": "property",
            "name": "plaintext",
            "type": "Bool",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 88,
            "description": "The function that enables or disables editing in the div",
            "itemtype": "property",
            "name": "contenteditable",
            "type": "function",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 102,
            "description": "The function that enables or disables spell checking",
            "itemtype": "property",
            "name": "spellcheck",
            "type": "function",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 116,
            "description": "The observer on value and isUserTyping",
            "itemtype": "property",
            "name": "valueObserver",
            "type": "function",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 128,
            "description": "This function is used in to set the contents after a value has been changed",
            "itemtype": "method",
            "name": "processValue",
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 141,
            "description": "This function is called by Ember when the HTML elements have been rendered in the view",
            "itemtype": "method",
            "name": "didInsertElement",
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 152,
            "description": "This is an event handler function which is called when the focus is removed from the div",
            "itemtype": "method",
            "name": "focusOut",
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 163,
            "description": "This is an event handler function which is called when a key is pressed in the div",
            "itemtype": "method",
            "name": "keyDown",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 177,
            "description": "This is an event handler function which is called when a key is released from the div",
            "itemtype": "method",
            "name": "keyUp",
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/content-editable.js",
            "line": 188,
            "description": "This is the function called to retrieve the contents in the element to set up in the component",
            "itemtype": "method",
            "name": "setContent",
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.ContentEditable",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/field-checkbox.js",
            "line": 18,
            "description": "The type of the field, this is added here so that we can have major\nfunctionality in the form-fields component and only extend what is required",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Components.FieldCheckbox"
        },
        {
            "file": "app/components/field-checkbox.js",
            "line": 29,
            "description": "Set the empty state for the checkbox field",
            "itemtype": "method",
            "name": "setEmpty",
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Components.FieldCheckbox"
        },
        {
            "file": "app/components/field-date.js",
            "line": 17,
            "description": "The type of the field, this is added here so that we can have major\nfunctionality in the form-fields component and only extend what is required",
            "itemtype": "property",
            "name": "",
            "type": "String",
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Components.FieldDate"
        },
        {
            "file": "app/components/field-date.js",
            "line": 28,
            "description": "The char length",
            "itemtype": "property",
            "name": "",
            "type": "function",
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Components.FieldDate",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/field-image.js",
            "line": 18,
            "description": "The type of the field, this is added here so that we can have major\nfunctionality in the form-fields component and only extend what is required",
            "itemtype": "property",
            "name": "",
            "type": "String",
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Components.FieldImage"
        },
        {
            "file": "app/components/field-radio.js",
            "line": 18,
            "description": "The type of the field, this is added here so that we can have major\nfunctionality in the form-fields component and only extend what is required",
            "itemtype": "property",
            "name": "",
            "type": "String",
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Components.FieldRadio"
        },
        {
            "file": "app/components/field-radio.js",
            "line": 29,
            "description": "These are the events that this components is listening to",
            "itemtype": "property",
            "name": "actions",
            "type": "Obeject",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.FieldRadio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/field-radio.js",
            "line": 39,
            "description": "This function is called when a field has been changed. We set the value in the component",
            "itemtype": "method",
            "name": "changed",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.FieldRadio",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/field-text.js",
            "line": 18,
            "description": "The type of the field, this is added here so that we can have major\nfunctionality in the form-fields component and only extend what is required",
            "itemtype": "property",
            "name": "",
            "type": "String",
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Components.FieldText"
        },
        {
            "file": "app/components/field-text.js",
            "line": 29,
            "description": "The char length",
            "itemtype": "property",
            "name": "",
            "type": "String",
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Components.FieldText",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/field-textarea.js",
            "line": 18,
            "description": "The type of the field, this is added here so that we can have major\nfunctionality in the form-fields component and only extend what is required",
            "itemtype": "property",
            "name": "",
            "type": "String",
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Components.FieldTextarea"
        },
        {
            "file": "app/components/field-view.js",
            "line": 19,
            "description": "Normally you just specify a string value in the layoutName but in order\nto support dynamic behavior we are declaring a function and setting it as\nvolatile so that Ember attempts to get the layoutName at run time every time.",
            "itemtype": "property",
            "name": "layoutName",
            "type": "function",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FieldView"
        },
        {
            "file": "app/components/field-view.js",
            "line": 40,
            "description": "Add the calss fieldSize to every feild element in order to allow easy\ncontrol of the field size.",
            "itemtype": "property",
            "name": "classNameBindings",
            "type": "Array",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.FieldView",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/field-view.js",
            "line": 51,
            "description": "Leverage the fieldSize attribute supported by Emberjs and make it a runtime\ndynamic property.",
            "itemtype": "property",
            "name": "fieldSize",
            "type": "function",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.FieldView",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/field-view.js",
            "line": 64,
            "description": "Perform some actions after the render is complete",
            "itemtype": "method",
            "name": "didRender",
            "access": "public",
            "tagname": "",
            "todo": [
                "perhaps delegate the did render per type"
            ],
            "class": "Prometheus.Components.FieldView",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/field-view.js",
            "line": 129,
            "description": "This is a utility function that is used to display the error message above\nthe field and add a blink effect on the input to highlight error.",
            "itemtype": "method",
            "name": "blickError",
            "access": "public",
            "tagname": "",
            "todo": [
                "get the display time from the application configuration"
            ],
            "class": "Prometheus.Components.FieldView",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/field-view.js",
            "line": 159,
            "description": "These are the events that are handled by the this components",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.FieldView",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/field-view.js",
            "line": 169,
            "description": "This function is called whenever a value is changed in the field\nthis function validates the data and displays error message if the data\ninput is not valid for the type specified in the metadata for the view",
            "itemtype": "method",
            "name": "changed",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "todo": [
                "at the moment the meta key used for field validation is 'filter'",
                "verify if that will be used instead of the 'type'",
                "implement field masking in order to support better user experience"
            ],
            "class": "Prometheus.Components.FieldView",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 29,
            "description": "The type of the current field, the default type is text. If the field type\nis not specified then we will render the field as text field.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 40,
            "description": "This flag is used to check whether the field is editable or not. The default\nvalue is true",
            "itemtype": "property",
            "name": "isEditable",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 51,
            "description": "This flag is used to specify the state of the field's contents, whether they\nare empty or not. The default value is true",
            "itemtype": "property",
            "name": "isEmpty",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 62,
            "description": "This flag is used to specify the state of the field's contents, whether they\nare valid or not. The default value is true. Normally this flag will always\nbe true because it is better to mask the contents with respect to the valid\ninput rather than showing that the data is invalid",
            "itemtype": "property",
            "name": "isValid",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 75,
            "description": "Some fields may required us to fetch the information from an API, which would\nmean that the contents would not be available immediately. This flag is used\nto specify the state of the field's contents, whether they have finished\nloading or not. The default value is true.",
            "itemtype": "property",
            "name": "isLoading",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 88,
            "description": "This flag is used to specify the state of the field, whether the user is\ntyping in it or not. The default value of the field is false",
            "itemtype": "property",
            "name": "isTyping",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 99,
            "description": "Some fields may not be viewwable at all, This checks supercedes the checks\nfor edit and isEditable. The default value is true",
            "itemtype": "property",
            "name": "isViewable",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 110,
            "description": "This flag is used to maintain the state of the field, whether it has been\nchangged or not. The default value is false",
            "itemtype": "property",
            "name": "isChanged",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 125,
            "description": "Some fields are dependant on other fields or rules. This flag is used to\nspecify whehter it is or not. The default value is false",
            "itemtype": "property",
            "name": "isDependant",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 136,
            "description": "This flag is used to maintain whether the field is required or not. The\ndefult is false",
            "itemtype": "property",
            "name": "isRequired",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 147,
            "description": "This flag is used specify whether we need to load the field in an editable\nmannner. This is different from editable as it supercedes the editable flag.\nA field may be disabled for edit view but due to acl or dependencies it may\nnot be editable.",
            "itemtype": "property",
            "name": "edit",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 160,
            "description": "Class name bindings are used to add a class name in all the rendered\nblocks of the form-field instance. They are used so that we can control the\nway the field is rendered",
            "itemtype": "property",
            "name": "classNameBindings",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 172,
            "description": "This is the property that is used to set the set the scheduled events e.g.\nisTyping under check",
            "itemtype": "property",
            "name": "scheduler",
            "type": "Ember.run",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 183,
            "description": "This field stores the old value for audit puposed.",
            "itemtype": "property",
            "name": "oldValue",
            "type": "mixed",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 193,
            "description": "All the fields will have their own display needs so instead of handling\nthem all in template, which would be very very unwise as we are talking\nabout handlebars, we would wish to load a diffrent template based on the\nfield type being requested.",
            "itemtype": "property",
            "name": "layoutName",
            "type": "function",
            "return": {
                "description": "template  The template name that will be rendered",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 216,
            "description": "During the initialize ohase of the field we are need to evaluate if the\nfield is empty, if so then set the isEmpty flag to true otherwise false",
            "itemtype": "method",
            "name": "didReceiveAttrs",
            "access": "public",
            "tagname": "",
            "todo": [
                "check for Array and support EmptyObject",
                "EmberModel",
                "etc."
            ],
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 229,
            "description": "This function is used to set the empty flag, this is isolated so that it\ncan be overridden by the form components whenever required.",
            "itemtype": "method",
            "name": "setEmpty",
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 264,
            "description": "This function is called when the view has been rendered, we should ideally\nuse didRender but it was getting called every time the value was changed\nwhich would mean that we have to add a mask every time a value is changed\nthat would not be good.",
            "itemtype": "method",
            "name": "didInsertElement",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 313,
            "description": "This function is used retrive the mask options",
            "itemtype": "method",
            "name": "getMask",
            "params": [
                {
                    "name": "mask",
                    "description": "The mask required e.g. alpha, alphanumeric, email, etc.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "maskOptions  The settings required for masking the data",
                "type": "Object"
            },
            "todo": [
                "possibly store the masks and options somewhere else to allow customizations"
            ],
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 346,
            "description": "This function is used to retrive the tag that is to be used for the selection\nfor a type",
            "itemtype": "method",
            "name": "getTag",
            "params": [
                {
                    "name": "type",
                    "description": "The type of field requried",
                    "type": "String"
                }
            ],
            "return": {
                "description": "tagname  The tag name for the field type",
                "type": "String"
            },
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 363,
            "description": "This function is fired when a user presses a key on the keybord. We capture\nthis event in order to set the flag isTyping",
            "itemtype": "method",
            "name": "keyDown",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/form-fields.js",
            "line": 376,
            "description": "This function if fired when a user releases a key on the keyborad. We are\ncapturing this event in order to update the isTyping flag. We are taking the\naverage typing speed of 41.4 words per minutes which is 0.69 words per second,\nwhich results in 1495ms per word.",
            "itemtype": "method",
            "name": "keyUp",
            "access": "public",
            "tagname": "",
            "todo": [
                "Maybe we can calculate the average typing speed at run time based on the user who is typing.",
                "Should clear the data on focus-out as well."
            ],
            "class": "Prometheus.Components.FormFields",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 18,
            "description": "The comment that we are gathering",
            "itemtype": "property",
            "name": "comment",
            "type": "Ember.Service",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox"
        },
        {
            "file": "app/components/message-box.js",
            "line": 28,
            "description": "The i18n library service that is used in order to get the translations",
            "itemtype": "property",
            "name": "i18n",
            "type": "Ember.Service",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 38,
            "description": "This is the list of emojis that we support",
            "itemtype": "property",
            "name": "emojiList",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MessageBoxComponent"
        },
        {
            "file": "app/components/message-box.js",
            "line": 155,
            "description": "These are the classes the must be registered with the component",
            "itemtype": "property",
            "name": "classNames",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 165,
            "description": "These are the attributes that are bound with the element",
            "itemtype": "property",
            "name": "classNames",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 175,
            "description": "These are the translated emojis",
            "itemtype": "property",
            "name": "translatedEmojis",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 185,
            "description": "Whether the content box is editable or not",
            "itemtype": "property",
            "name": "editable",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MessageBoxComponent",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 195,
            "description": "This flag is used to enable or disable spell checking",
            "itemtype": "property",
            "name": "checkSpelling",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 205,
            "description": "Flag that maintains whether the user is typing or not",
            "itemtype": "property",
            "name": "isUserTyping",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 215,
            "description": "This is the computed property that enables or disabled the HTML5 contenteditable\nflag on the div",
            "itemtype": "property",
            "name": "contenteditable",
            "type": "Computed",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 230,
            "description": "This is the property that enables or disabled the HTML5 spellcheck flag on\nthe div",
            "itemtype": "property",
            "name": "spellcheck",
            "type": "Computed",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 245,
            "description": "This function is used to observe the value and isUserTyping attributes",
            "itemtype": "property",
            "name": "valueObserver",
            "type": "function",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 257,
            "description": "This function is called when the object is created, we are using this\nfunction to translate the emojis",
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 273,
            "description": "This function is used to process the values",
            "itemtype": "method",
            "name": "processValue",
            "return": {
                "description": "",
                "type": "*|result"
            },
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 286,
            "description": "This function is an event handler that is called when the focus is removed from the div",
            "itemtype": "method",
            "name": "focusOut",
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 297,
            "description": "If the user is typing then set the flag to true",
            "itemtype": "method",
            "name": "keyDown",
            "params": [
                {
                    "name": "event",
                    "description": "the event that triggered this function",
                    "type": "Object"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 310,
            "description": "As soon as the user has typed in a key we update the value",
            "itemtype": "method",
            "name": "keyUp",
            "params": [
                {
                    "name": "event",
                    "description": "the event that triggered this function",
                    "type": "Object"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 321,
            "description": "Return the contents set within this object",
            "itemtype": "method",
            "name": "setContents",
            "return": {
                "description": "result  The current value",
                "type": "Mixed"
            },
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 332,
            "description": "Clear the contents",
            "itemtype": "method",
            "name": "clearContents",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 343,
            "description": "Load the message box after it has been loaded",
            "itemtype": "method",
            "name": "didRender",
            "access": "public",
            "tagname": "",
            "todo": [
                "get the base link for issues and users via a function."
            ],
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/message-box.js",
            "line": 379,
            "description": "This function is called when the rendered component is being destroyed",
            "itemtype": "method",
            "name": "willDestroyElement",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.MessageBox",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/milestone-block.js",
            "line": 20,
            "description": "The i18n library service that is used in order to get the translations",
            "itemtype": "property",
            "name": "i18n",
            "type": "Ember.Service",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MilestoneBlock"
        },
        {
            "file": "app/components/milestone-block.js",
            "line": 30,
            "description": "This is the layout name that determines the HBS file to be rendered, we are\nusing this so that we can load milestone block dynamically without having to\ncheck for the type using if else statements that can be very taxing",
            "itemtype": "property",
            "name": "layoutName",
            "type": "function",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.MilestoneBlock",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/milestone-block.js",
            "line": 82,
            "description": "This function is called by Ember after it has rendered the HTML elements in the view, we\nuse this function in order to handle popover messages",
            "itemtype": "method",
            "name": "didInsertElement",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.MilestoneBlock",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/milestone-block.js",
            "line": 93,
            "description": "This function is called by Ember when it is about to destroy the HTML elements rendered, we\nuse this function in order to destroy the popover messages",
            "itemtype": "method",
            "name": "willDestroyElement",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.MilestoneBlock",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/nav-bar.js",
            "line": 19,
            "description": "This function fetches the navigation metaData and makes it available for display",
            "itemtype": "method",
            "name": "init",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.NavBar",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/nav-bar.js",
            "line": 34,
            "description": "The actions for the navigation bar, primarily used fo route transition",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.NavBar"
        },
        {
            "file": "app/components/nav-bar.js",
            "line": 44,
            "description": "This function is used in order to handle navigation to our desired route",
            "itemtype": "method",
            "name": "navigate",
            "params": [
                {
                    "name": "route",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "routeParams",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "anchorRoute",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "projectId",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.NavBar"
        },
        {
            "file": "app/components/nav-bar.js",
            "line": 74,
            "description": "This function is called when a project is selected",
            "itemtype": "method",
            "name": "projectChanged",
            "params": [
                {
                    "name": "projectId",
                    "description": "The selected project",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.NavBar"
        },
        {
            "file": "app/components/query-builder.js",
            "line": 20,
            "description": "The i18n library service that is used in order to get the translations",
            "itemtype": "property",
            "name": "i18n",
            "type": "Ember.Service",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.QueryBuilder"
        },
        {
            "file": "app/components/query-builder.js",
            "line": 30,
            "description": "These are the classes the must be registered with the component",
            "itemtype": "property",
            "name": "classNames",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.QueryBuilder",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/query-builder.js",
            "line": 40,
            "description": "This function is called by Ember after it has finished rendering the HTML elements, we\nuse this function in order to setup the query builder",
            "itemtype": "method",
            "name": "didInsertElement",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.QueryBuilder",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/query-builder.js",
            "line": 58,
            "description": "This function is call by Ember when it is about to destroy the HTML elements rendered. We\nuse this function in order to destroy the querybuilder object we initiated",
            "itemtype": "method",
            "name": "willDestroyElement",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.QueryBuilder",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/quill-editor.js",
            "line": 18,
            "description": "This function is called by Ember when it is about to destroy the HTML elements rendered. We\nuse this function in order to destroy the javascript components",
            "itemtype": "method",
            "name": "willDestroyElement",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.QuillEditor",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/quill-editor.js",
            "line": 32,
            "description": "Perform some actions after the render is complete",
            "itemtype": "method",
            "name": "didRender",
            "access": "public",
            "tagname": "",
            "todo": [
                "perhaps delegate the did render per type"
            ],
            "class": "Prometheus.Components.QuillEditor",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/text-field.js",
            "line": 24,
            "description": "These are the classes that must be added in the HTML tag",
            "itemtype": "property",
            "name": "classNames",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Component.TextField"
        },
        {
            "file": "app/components/textarea-field.js",
            "line": 24,
            "description": "Adding paramater binding for data-identifier so that we can get the related id with it",
            "itemtype": "property",
            "name": "attributeBindings",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.TextareaField"
        },
        {
            "file": "app/components/textarea-field.js",
            "line": 34,
            "description": "These are the class names that are applied to this component",
            "itemtype": "property",
            "name": "classNames",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Components.TextareaField",
            "namespace": "Prometheus.Components"
        },
        {
            "file": "app/components/tree-list.js",
            "line": 18,
            "description": "These are the evet handlers for the component.",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Components.TreeList"
        },
        {
            "file": "app/components/tree-list.js",
            "line": 28,
            "description": "Load a particular wiki page",
            "itemtype": "method",
            "name": "loadWiki",
            "params": [
                {
                    "name": "projectId",
                    "description": "The projectId to which the wiki belogns to",
                    "type": "String"
                },
                {
                    "name": "wikiName",
                    "description": "The name of the wiki to which we need to navigate to",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "todo": [
                "Trigger the notificaiton"
            ],
            "class": "Prometheus.Components.TreeList"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 24,
            "description": "Query params that the controller needs to support, it may seem that the\nsame paramters are defined in both the route and the controller but is not\nthe case exactly, the parameters defined in the route are meant for the model\nwhile the parameters defined in the controller are meant for the interaction\nwith the view. e.g. the query might be different because the user might be\ncomposing it as compared to te query string that was last used to fetch the\ndata.",
            "itemtype": "property",
            "name": "queryParams",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 40,
            "description": "This property stores the current sorting order of the page, storing it here\nallows us to toggle it.",
            "itemtype": "property",
            "name": "order",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 51,
            "description": "This property stores the current page that the user is viewing,",
            "itemtype": "property",
            "name": "page",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 61,
            "description": "This property stores the field on which the page if currently sored on",
            "itemtype": "property",
            "name": "sort",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 71,
            "description": "This property stores the current query based on which the page is filtered.",
            "itemtype": "property",
            "name": "query",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 81,
            "description": "The count of the selected items in the list view.",
            "itemtype": "property",
            "name": "selectedCount",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 92,
            "description": "The action handlers for the issue list view",
            "itemtype": "property",
            "name": "action",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 102,
            "description": "This action allows us to more from one page to the other",
            "itemtype": "method",
            "name": "paginate",
            "params": [
                {
                    "name": "page",
                    "description": "The page that the user wishes to see",
                    "type": "Integer"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 115,
            "description": "This action filters the data",
            "itemtype": "method",
            "name": "filter",
            "access": "public",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 126,
            "description": "This action is used to sort the data",
            "itemtype": "method",
            "name": "sortData",
            "params": [
                {
                    "name": "field",
                    "description": "The field that the user wishes to sort the data on",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 156,
            "description": "This action is used to reload the page, whether it be with changes in the\nparamters or without any change",
            "itemtype": "method",
            "name": "reloadPage",
            "access": "public",
            "tagname": "",
            "todo": [
                "Hack Alert!!"
            ],
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 171,
            "description": "Keep the query being searched in the controller",
            "itemtype": "method",
            "name": "populateQuery",
            "params": [
                {
                    "name": "query",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "todo": [
                "allow auto complete"
            ],
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 184,
            "description": "Convert the rul object to string and perform searched",
            "itemtype": "method",
            "name": "searchByRules",
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 200,
            "description": "Open the filter view if not already Open",
            "itemtype": "method",
            "name": "openFilters",
            "access": "public",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 211,
            "description": "Toggle the dropdown arrow on toggle",
            "itemtype": "method",
            "name": "toggleFilters",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 221,
            "description": "This function is triggered when the checkbox on the the top right of the list is called\nThis function only selects the items currently visible in the list-view",
            "itemtype": "method",
            "name": "selectAll",
            "params": [
                {
                    "name": "value",
                    "description": "whether the selectAll checkbox was selected of not",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "todo": [
                "allow the retention of the checkboxes across the multiple pages"
            ],
            "access": "public",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 245,
            "description": "This function is triggerd when an item in the list is selected",
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "value",
                    "description": "whether the checkbox was selected of not",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "todo": [
                "allow the retention of the checkboxes across the multiple pages",
                "convert to a component"
            ],
            "access": "public",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 274,
            "description": "This function is used to navigate the user to the detail page for the issues",
            "itemtype": "method",
            "name": "openDetail",
            "params": [
                {
                    "name": "issue",
                    "description": "the issue model to which we have to navigate to",
                    "type": "IssueModel"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/issue/index.js",
            "line": 287,
            "description": "This function is used to help navigate to the create issue page",
            "itemtype": "method",
            "name": "createIssue",
            "access": "public",
            "tagname": "",
            "class": "Issue",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/wiki/create.js",
            "line": 20,
            "description": "This property is used to control the enabling and disabling of the save\nbutton, the save is only enabled if the current model has been modified",
            "itemtype": "property",
            "name": "saveDisabled",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/create.js",
            "line": 31,
            "description": "The i18n library service that is used in order to get the translations",
            "itemtype": "property",
            "name": "i18n",
            "type": "Ember.Service",
            "access": "public",
            "tagname": "",
            "class": "Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/create.js",
            "line": 41,
            "description": "This is the parentId of the wiki page that is being created. Initially it is\nnull",
            "itemtype": "property",
            "name": "parentId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/create.js",
            "line": 52,
            "description": "These are the event handled by this controller",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/create.js",
            "line": 62,
            "description": "This function is responsible for saving the model. After successfully\nsaving the function takes the user to the saved page.",
            "itemtype": "method",
            "name": "save",
            "access": "public",
            "tagname": "",
            "todo": [
                "Trigger the notificaiton"
            ],
            "class": "Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/create.js",
            "line": 88,
            "description": "This function lets a user traverse to the main page of the project",
            "itemtype": "method",
            "name": "cancel",
            "access": "public",
            "tagname": "",
            "todo": [
                "Trigger the notificaiton"
            ],
            "class": "Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/create.js",
            "line": 100,
            "description": "The function enables the save button",
            "itemtype": "method",
            "name": "changed",
            "access": "public",
            "tagname": "",
            "todo": [
                "Trigger the notificaiton"
            ],
            "class": "Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/create.js",
            "line": 133,
            "description": "This function sets the wikiId as the parent",
            "itemtype": "method",
            "name": "wikiChanged",
            "params": [
                {
                    "name": "wiki",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 23,
            "description": "This is the store service which is used to interact with the data API",
            "itemtype": "property",
            "name": "store",
            "type": "Service",
            "access": "private",
            "tagname": "",
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 33,
            "description": "This flag is used to show or hide the modal dialog box for adding new tags",
            "itemtype": "property",
            "name": "addTagDialog",
            "type": "bool",
            "access": "private",
            "tagname": "",
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 43,
            "description": "This flag is used to enable and disable the save button",
            "itemtype": "property",
            "name": "saveDisabled",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 53,
            "description": "These are the actions that are handled by this controller",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 63,
            "description": "This function is responsible for saving the model. After successfully\nsaving the function takes the user to the saved page.",
            "itemtype": "method",
            "name": "save",
            "access": "public",
            "tagname": "",
            "todo": [
                "Trigger the notificaiton"
            ],
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 105,
            "description": "This function lets a user traverse to the main page of the project",
            "itemtype": "method",
            "name": "cancel",
            "access": "public",
            "tagname": "",
            "todo": [
                "Trigger the notificaiton"
            ],
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 118,
            "description": "The function enables the save button",
            "itemtype": "method",
            "name": "changed",
            "access": "public",
            "tagname": "",
            "todo": [
                "Trigger the notificaiton"
            ],
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 153,
            "description": "This function sets the wikiId as the parent",
            "itemtype": "method",
            "name": "wikiChanged",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 168,
            "description": "This function is used to select the tags from the system",
            "itemtype": "method",
            "name": "tagSelected",
            "params": [
                {
                    "name": "e",
                    "description": "the list of selected items",
                    "type": "Object"
                }
            ],
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 212,
            "description": "This function is used to add a new tag in the system",
            "itemtype": "method",
            "name": "addTag",
            "todo": [
                "Load the current info within the API"
            ],
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 271,
            "description": "This function is used to remove a tag from current wiki",
            "itemtype": "method",
            "name": "removeTag",
            "params": [
                {
                    "name": "tag",
                    "description": "The tag that needs to be removed",
                    "type": "Object"
                },
                {
                    "name": "list",
                    "description": "The list of the tags that are currently set",
                    "type": "Object"
                }
            ],
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 304,
            "description": "This function is used to show the add modal dialog box",
            "itemtype": "method",
            "name": "showDialog",
            "access": "public",
            "tagname": "",
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/edit.js",
            "line": 315,
            "description": "This function is used to hide the add tag modal",
            "itemtype": "method",
            "name": "removeModal",
            "access": "public",
            "tagname": "",
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/index.js",
            "line": 21,
            "description": "These are the actions that we are going to handle for this controller",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Index",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/index.js",
            "line": 31,
            "description": "This function is used to navigate the user to the create route",
            "itemtype": "method",
            "name": "create",
            "access": "public",
            "tagname": "",
            "class": "Index",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/page.js",
            "line": 24,
            "description": "The current user service",
            "itemtype": "property",
            "name": "currentUser",
            "type": "Ember.Service",
            "access": "public",
            "tagname": "",
            "class": "page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/page.js",
            "line": 34,
            "description": "These are the tags that the user has selected.",
            "itemtype": "property",
            "name": "selectedTags",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/page.js",
            "line": 44,
            "description": "Count of the votes cast for this wiki page",
            "itemtype": "property",
            "name": "votes",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/page.js",
            "line": 54,
            "description": "This is the store service which is used to interact with the data API",
            "itemtype": "property",
            "name": "store",
            "type": "Service",
            "access": "private",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/page.js",
            "line": 64,
            "description": "These are the actions hanlded by this Controller",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/page.js",
            "line": 74,
            "description": "Load the eidt page",
            "itemtype": "method",
            "name": "edit",
            "access": "public",
            "tagname": "",
            "todo": [
                "Trigger the notificaiton"
            ],
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/page.js",
            "line": 86,
            "description": "This function is used to navigate the user to the parent Id",
            "itemtype": "method",
            "name": "loadWiki",
            "access": "public",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/page.js",
            "line": 96,
            "description": "This function is called when the user presses the create button",
            "itemtype": "method",
            "name": "create",
            "access": "public",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/page.js",
            "line": 108,
            "description": "This function is called when the user presses the delete button",
            "itemtype": "method",
            "name": "delete",
            "access": "public",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/page.js",
            "line": 122,
            "description": "This action is called when we wish to upvote on a wiki page.",
            "itemtype": "method",
            "name": "upvote",
            "params": [
                {
                    "name": "wikiId",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/wiki/page.js",
            "line": 160,
            "description": "This action is called when we wish to lock or unlock a wiki page",
            "itemtype": "method",
            "name": "lockWiki",
            "params": [
                {
                    "name": "action",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/controllers/app/project/calendar.js",
            "line": 18,
            "description": "The current user service",
            "itemtype": "property",
            "name": "currentUser",
            "type": "Ember.Service",
            "access": "private",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/calendar.js",
            "line": 28,
            "description": "The i18n library service that is used in order to get the translations",
            "itemtype": "property",
            "name": "i18n",
            "type": "Ember.Service",
            "access": "private",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/calendar.js",
            "line": 38,
            "description": "Locale value, the default is en",
            "itemtype": "property",
            "name": "localeCode",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/calendar.js",
            "line": 48,
            "description": "These are the header option for the calendar",
            "itemtype": "property",
            "name": "header",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/calendar.js",
            "line": 62,
            "description": "The events",
            "itemtype": "property",
            "name": "events",
            "type": "Objects",
            "access": "public",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/calendar.js",
            "line": 72,
            "description": "These are the actions that are handled by this controller",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/calendar.js",
            "line": 82,
            "description": "This is the function that handled the click event",
            "itemtype": "method",
            "name": "clicked",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "jsEvent",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "view",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/calendar.js",
            "line": 95,
            "description": "This function handles the event where the drag is started",
            "itemtype": "method",
            "name": "eventDragStart",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/calendar.js",
            "line": 107,
            "description": "This function handles the action when the view has been rendered",
            "itemtype": "method",
            "name": "eventRender",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "eventElement",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/calendar.js",
            "line": 136,
            "description": "This function used to retrieve HTML tag for a priority",
            "itemtype": "method",
            "name": "getPriorityHTML",
            "params": [
                {
                    "name": "priority",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 18,
            "description": "The current user service",
            "itemtype": "property",
            "name": "currentUser",
            "type": "Ember.Service",
            "access": "public",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 28,
            "description": "This is the flag which is used to",
            "itemtype": "property",
            "name": "currentUser",
            "type": "Ember.Service",
            "access": "public",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 38,
            "description": "This is the list of issues related to the current project",
            "itemtype": "property",
            "name": "issuesList",
            "type": "Array",
            "access": "public",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 48,
            "description": "This is the list users in the system",
            "itemtype": "property",
            "name": "usersList",
            "type": "Array",
            "access": "public",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 58,
            "description": "This flag is used to show or hide the modal dialog box for adding conversations",
            "itemtype": "property",
            "name": "addConversationDialog",
            "type": "bool",
            "access": "private",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 68,
            "description": "Available room types",
            "itemtype": "property",
            "name": "roomTypes",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 81,
            "description": "Default room type",
            "itemtype": "property",
            "name": "roomType",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 91,
            "description": "These are the actions that are handled by this controller",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 101,
            "description": "This function is ued to save a calendar event",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "relatedId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "contents",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 146,
            "description": "This function allows us to save votes in the database as comments",
            "itemtype": "method",
            "name": "vote",
            "params": [
                {
                    "name": "vote",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "relatedId",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "todo": [
                "Check if the user has already voted if so then disable the vote"
            ],
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 191,
            "description": "This action is called when we wish to upvote the conversation",
            "itemtype": "method",
            "name": "upvote",
            "params": [
                {
                    "name": "conversationId",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 228,
            "description": "This function is used to add a new conversation in the system",
            "itemtype": "method",
            "name": "addConversation",
            "access": "public",
            "tagname": "",
            "todo": [
                "Load the current user info within the API",
                "Unable to add dynamically"
            ],
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 278,
            "description": "This function is used to show the add modal dialog box",
            "itemtype": "method",
            "name": "showDialog",
            "access": "public",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/conversation.js",
            "line": 289,
            "description": "This function is used to hide the add conversation modal",
            "itemtype": "method",
            "name": "removeModal",
            "access": "public",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/index.js",
            "line": 19,
            "description": "These are the actions that we are going to handle for this controller",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Index",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/index.js",
            "line": 29,
            "description": "This action is used to allow navigation to a user to a project related\npage",
            "itemtype": "method",
            "name": "navigateToProjectPage",
            "params": [
                {
                    "name": "entity",
                    "description": "This is the entity the user wants to navigate to",
                    "type": "String"
                },
                {
                    "name": "query",
                    "description": "The params passed in the format of encoded URL string",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Index",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/wiki.js",
            "line": 20,
            "description": "This is the tree that we use in order to maintain the list of wiki pages for a particular project",
            "itemtype": "property",
            "name": "tree",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Wiki",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/wiki.js",
            "line": 30,
            "description": "These are the event that are handled by this controller",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Wiki",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/wiki.js",
            "line": 40,
            "description": "This is the function that is used in order to save a wiki page",
            "itemtype": "method",
            "name": "save",
            "access": "public",
            "tagname": "",
            "class": "Wiki",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/project/wiki.js",
            "line": 51,
            "description": "This is the function that is used in order to navigate the user to the create page",
            "itemtype": "method",
            "name": "create",
            "access": "public",
            "tagname": "",
            "class": "Wiki",
            "module": "App.Project"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 27,
            "description": "The count of the selected items in the list view.",
            "itemtype": "property",
            "name": "selectedCount",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 37,
            "description": "Query params that the controller needs to support",
            "itemtype": "property",
            "name": "queryParams",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "todo": [
                "See this can be dynamic"
            ],
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 48,
            "description": "The current page number",
            "itemtype": "property",
            "name": "page",
            "type": "Integer",
            "access": "public",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 58,
            "description": "The current query",
            "itemtype": "property",
            "name": "query",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 68,
            "description": "The current query string",
            "itemtype": "property",
            "name": "queryString",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 78,
            "description": "The current sorted property",
            "itemtype": "property",
            "name": "sort",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 88,
            "description": "The current sorted property",
            "itemtype": "property",
            "name": "sortOrder",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 98,
            "description": "Setup Controller function is called by the router at the end of the\nsetupController function defined in the app.module route. This function\nis used to perform actions required at the start of each render cycle.\n\nThis is a replacement of init function which is only called once but if the\nsetupController function in router calls this function then it is called\nevery time a user tries to visit the route",
            "itemtype": "method",
            "name": "setupController",
            "access": "private",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 118,
            "description": "The action handlers for the view",
            "itemtype": "property",
            "name": "action",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 128,
            "description": "This function is triggered when the checkbox on the the top right of the list is called\nThis function only selects the items currently visible in the list-view",
            "itemtype": "method",
            "name": "selectAll",
            "params": [
                {
                    "name": "value",
                    "description": "whether the selectAll checkbox was selected of not",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "todo": [
                "allow the retention of the checkboxes across the multiple pages"
            ],
            "access": "public",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 147,
            "description": "This function is triggerd when an item in the list is selected",
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "value",
                    "description": "whether the checkbox was selected of not",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "todo": [
                "allow the retention of the checkboxes across the multiple pages"
            ],
            "access": "public",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 177,
            "description": "This action is triggerd when a user tries to navigate to the deatil view",
            "itemtype": "method",
            "name": "detail",
            "params": [
                {
                    "name": "id",
                    "description": "the identifier of the module",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 190,
            "description": "This function is used to handle pagination",
            "itemtype": "method",
            "name": "paginate",
            "params": [
                {
                    "name": "page",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 205,
            "description": "This function is used to handle search queries",
            "itemtype": "method",
            "name": "filter",
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "todo": [
                "Validate query before submission"
            ],
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 217,
            "description": "Keep the query being searched in the controller",
            "itemtype": "method",
            "name": "populateQuery",
            "params": [
                {
                    "name": "query",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "todo": [
                "allow auto complete"
            ],
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 231,
            "description": "Convert the rule object to string and perform searched",
            "itemtype": "method",
            "name": "searchByRules",
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 252,
            "description": "This function will be used to initialize the page and initialize the query\nusing jQuery Query Builder",
            "itemtype": "method",
            "name": "setupQuery",
            "access": "private",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 269,
            "description": "This method is responsible for getting data sorted",
            "itemtype": "method",
            "name": "sortData",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "todo": [
                "for some reason sortOrder in not set before navigation"
            ],
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 302,
            "description": "Navigate to the desired page in the list",
            "itemtype": "method",
            "name": "navigate",
            "access": "private",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 316,
            "description": "Open the filter view if not already Open",
            "itemtype": "method",
            "name": "openFilters",
            "access": "public",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/module.js",
            "line": 328,
            "description": "Toggle the dropdown arrow on toggle",
            "itemtype": "method",
            "name": "toggleFilters",
            "access": "private",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 27,
            "description": "The count of the selected items in the list view.",
            "itemtype": "property",
            "name": "selectedCount",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 37,
            "description": "Query params that the controller needs to support",
            "itemtype": "property",
            "name": "queryParams",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "todo": [
                "See this can be dynamic"
            ],
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 48,
            "description": "The current page number",
            "itemtype": "property",
            "name": "page",
            "type": "Integer",
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 58,
            "description": "The current query",
            "itemtype": "property",
            "name": "query",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 68,
            "description": "The current query string",
            "itemtype": "property",
            "name": "queryString",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 78,
            "description": "The current sorted property",
            "itemtype": "property",
            "name": "sort",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 88,
            "description": "The current sorted property",
            "itemtype": "property",
            "name": "sortOrder",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 98,
            "description": "Setup Controller function is called by the router at the end of the\nsetupController function defined in the app.module route. This function\nis used to perform actions required at the start of each render cycle.\n\nThis is a replacement of init function which is only called once but if the\nsetupController function in router calls this function then it is called\nevery time a user tries to visit the route",
            "itemtype": "method",
            "name": "setupController",
            "access": "private",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 118,
            "description": "The action handlers for the view",
            "itemtype": "property",
            "name": "action",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 128,
            "description": "This function is triggered when the checkbox on the the top right of the list is called\nThis function only selects the items currently visible in the list-view",
            "itemtype": "method",
            "name": "selectAll",
            "params": [
                {
                    "name": "value",
                    "description": "whether the selectAll checkbox was selected of not",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "todo": [
                "allow the retention of the checkboxes across the multiple pages"
            ],
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 147,
            "description": "This function is triggered when an item in the list is selected",
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "value",
                    "description": "whether the checkbox was selected of not",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "todo": [
                "allow the retention of the checkboxes across the multiple pages"
            ],
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 177,
            "description": "This action is triggered when a user tries to navigate to the detail view",
            "itemtype": "method",
            "name": "detail",
            "params": [
                {
                    "name": "id",
                    "description": "the identifier of the module",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 190,
            "description": "This function is used to handle pagination",
            "itemtype": "method",
            "name": "paginate",
            "params": [
                {
                    "name": "pages",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 205,
            "description": "This function is used to handle search queries",
            "itemtype": "method",
            "name": "filter",
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "todo": [
                "Validate query before submission"
            ],
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 217,
            "description": "Keep the query being searched in the controller",
            "itemtype": "method",
            "name": "populateQuery",
            "params": [
                {
                    "name": "query",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "todo": [
                "allow auto complete"
            ],
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 231,
            "description": "Convert the rule object to string and perform searched",
            "itemtype": "method",
            "name": "searchByRules",
            "return": {
                "description": "void"
            },
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 252,
            "description": "This function will be used to initialize the page and initialize the query\nusing jQuery Query Builder",
            "itemtype": "method",
            "name": "setupQuery",
            "access": "private",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 272,
            "description": "This method is responsible for getting data sorted",
            "itemtype": "method",
            "name": "sortData",
            "access": "private",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 305,
            "description": "Navigate to the desired page in the list",
            "itemtype": "method",
            "name": "navigate",
            "access": "private",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 322,
            "description": "Open the filter view if not already Open",
            "itemtype": "method",
            "name": "openFilters",
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app/projectlist.js",
            "line": 334,
            "description": "Toggle the dropdown arrow on toggle",
            "itemtype": "method",
            "name": "toggleFilters",
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/controllers/app.js",
            "line": 18,
            "description": "The session service which is offered by ember-simple-auth that will be used\nin order to verfy whether the used is authenticated",
            "itemtype": "property",
            "name": "session",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Controller.App",
            "module": "App"
        },
        {
            "file": "app/controllers/app.js",
            "line": 29,
            "description": "The service that we use to maintain the currentUser",
            "itemtype": "property",
            "name": "currentUser",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Controller.App",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/controllers/app.js",
            "line": 39,
            "description": "The related field service that is used in order to manage dropdowns and relate fields",
            "itemtype": "property",
            "name": "relatedField",
            "type": "relatedFieldService",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Controller.App",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/controllers/app.js",
            "line": 49,
            "description": "The events that this controller is listing to",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Controller.App",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/controllers/app.js",
            "line": 59,
            "description": "This function invalidates the session which effectively logs the user out\nof the application",
            "itemtype": "method",
            "name": "invalidateSession",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Controller.App",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/controllers/signin.js",
            "line": 17,
            "description": "The session service which is offered by ember-simple-auth that will be used\nin order to verfy whether the used is authenticated",
            "itemtype": "property",
            "name": "session",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Controller.Signin",
            "module": "App"
        },
        {
            "file": "app/controllers/signin.js",
            "line": 28,
            "description": "The events that this controller is listing to",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Controller.Signin",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/controllers/signin.js",
            "line": 38,
            "description": "This function invalidates the session which effectively logs the user out\nof the application",
            "itemtype": "method",
            "name": "authenticate",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Controller.Signin",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/helpers/count-votes.js",
            "line": 8,
            "description": "This method get the count of the votes cast for a conversation room",
            "itemtype": "method",
            "name": "countVotes",
            "params": [
                {
                    "name": "model",
                    "description": "The comment object",
                    "type": "CommentModel"
                },
                {
                    "name": "search",
                    "description": "The comment we are looking for",
                    "type": "String"
                }
            ],
            "return": {
                "description": "count The count of the comment with the search comment",
                "type": "Integer"
            },
            "todo": [
                "Handle exception. If possible then make generic"
            ],
            "class": "Prometheus.Helpers.CountVotes",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/helpers/get-date.js",
            "line": 7,
            "description": "This is a helper function that is used to format the dates for Handlebars",
            "itemtype": "method",
            "name": "getDate",
            "params": [
                {
                    "name": "data",
                    "description": "The object that contains the date",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "The index on which the data is set",
                    "type": "String"
                },
                {
                    "name": "format",
                    "description": "Format of the date. Default MMMM Do YYYY, h:mm:ss a",
                    "type": "String"
                }
            ],
            "return": {
                "description": "date Formatted date",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Helpers.GetDate",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/get-issuecount.js",
            "line": 7,
            "description": "This is a helper function that is used to retrieve the count of issues in a\nparticular status",
            "itemtype": "method",
            "name": "getIssuecount",
            "params": [
                {
                    "name": "issues",
                    "description": "The list of all the issues on the project",
                    "type": "IssueModel"
                },
                {
                    "name": "type",
                    "description": "The type of status we are looking for",
                    "type": "String"
                }
            ],
            "return": {
                "description": "count The count of the particular type of issues",
                "type": "Integer"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Helpers.GetIssuecount",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/get-page.js",
            "line": 7,
            "description": "This method extracts the page number from the URL in _links property returned\nvia the API",
            "itemtype": "method",
            "name": "getPage",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "decodedUrl",
                "type": "String"
            },
            "class": "Prometheus.Helpers.GetPage",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/get-prop.js",
            "line": 7,
            "description": "This function is used to retrieve a property in a object",
            "itemtype": "method",
            "name": "getProp",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "data",
                "type": "*"
            },
            "class": "Prometheus.Helpers.GetProp",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/get-role.js",
            "line": 7,
            "description": "This is a helper function that is used to retrieve the role name from the\nmembership and roles list.\n\nPlease note that this function does not filter for the projectId. You must\npass the pre-filtered list.",
            "itemtype": "method",
            "name": "getRole",
            "params": [
                {
                    "name": "userId",
                    "description": "The id of the user for whom we are trying to retrive the role name",
                    "type": "String"
                },
                {
                    "name": "roles",
                    "description": "The roles for a project",
                    "type": "RoleMode"
                },
                {
                    "name": "memberhsip",
                    "description": "The membership rule list for a project",
                    "type": "MembershipModel"
                }
            ],
            "return": {
                "description": "roleName The role name",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Helpers.GetRole",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/get-timelog.js",
            "line": 8,
            "description": "This is a helper function that is used to retrieve the sum of time log entries\nor a particular type",
            "itemtype": "method",
            "name": "getTimelog",
            "params": [
                {
                    "name": "issues",
                    "description": "The list of all the issues on the project",
                    "type": "IssueModel"
                },
                {
                    "name": "type",
                    "description": "The type of time log required",
                    "type": "String"
                }
            ],
            "return": {
                "description": "totaltime The sum on the time logged for the type",
                "type": "Integer"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Helpers.GetTimelog",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/get-wiki.js",
            "line": 7,
            "description": "This method extracts the page number from the URL in _links property returned\nvia the API",
            "itemtype": "method",
            "name": "getWiki",
            "params": [
                {
                    "name": "wiki",
                    "description": "The wiki object",
                    "type": "WikiModel"
                },
                {
                    "name": "wikiList",
                    "description": "The list of wiki entries for this project",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parent The name of the parent",
                "type": "String"
            },
            "todo": [
                "Handle exception. If possible then make generic"
            ],
            "class": "Prometheus.Helpers.GetWiki",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/if-match.js",
            "line": 7,
            "description": "This is a helper function that is used to compare two values",
            "itemtype": "method",
            "name": "ifMatch",
            "params": [
                {
                    "name": "array",
                    "description": "The object that contains the data",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "The current index which needs evaluation",
                    "type": "String"
                }
            ],
            "return": {
                "description": "isNotLast true if the index is not the last in the array and vice versa",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Helpers.IfMatch",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/nav-icon.js",
            "line": 8,
            "description": "This is a helper function that is used get the icon for the nav item",
            "itemtype": "method",
            "name": "navIcon",
            "params": [
                {
                    "name": "array",
                    "description": "The object that contains the data",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "The current index which needs evaluation",
                    "type": "String"
                }
            ],
            "return": {
                "description": "isNotLast true if the index is not the last in the array and vice versa",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Helpers.NavIcon",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/not-last.js",
            "line": 7,
            "description": "This is a helper function that is used to format the dates for Handlebars",
            "itemtype": "method",
            "name": "notLast",
            "params": [
                {
                    "name": "array",
                    "description": "The object that contains the data",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "The current index which needs evaluation",
                    "type": "String"
                }
            ],
            "return": {
                "description": "isNotLast true if the index is not the last in the array and vice versa",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Helpers.NotLast",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/object-empty.js",
            "line": 7,
            "description": "This is a helper function that is used to format the dates for Handlebars",
            "itemtype": "method",
            "name": "objectEmpty",
            "params": [
                {
                    "name": "array",
                    "description": "The object that contains the data",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": "The curent index which needs evaluation",
                    "type": "String"
                }
            ],
            "return": {
                "description": "isNotLast true if the index is not the last in the array and vice versa",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Helpers.NotLast",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/priority-icon.js",
            "line": 7,
            "description": "This helper is used to get the icon for the priorityIcon",
            "itemtype": "method",
            "name": "PriorityIcon",
            "params": [
                {
                    "name": "priority",
                    "description": "The priority for which we need the icon",
                    "type": "String"
                }
            ],
            "return": {
                "description": "HTML  The HTML of the font-awesome icon",
                "type": "String"
            },
            "todo": [
                "Optimize"
            ],
            "class": "Prometheus.Helpers.PriorityIcon",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/sortable-class.js",
            "line": 7,
            "description": "This is the helper function that is used in the list views in order to get the\nclass name for the sortable rows",
            "itemtype": "method",
            "name": "sortableClass",
            "params": [
                {
                    "name": "fieldName",
                    "description": "The field for which we need the class",
                    "type": "String"
                },
                {
                    "name": "sort",
                    "description": "The field on which the page is currently sorted",
                    "type": "String"
                },
                {
                    "name": "order",
                    "description": "The order of the sort",
                    "type": "String"
                }
            ],
            "return": {
                "description": "className The class for this field",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Helpers.SortableClass",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/static-list.js",
            "line": 7,
            "description": "This helper is used to get related list",
            "itemtype": "method",
            "name": "staticList",
            "params": [
                {
                    "name": "name",
                    "description": "The list name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "list  The list",
                "type": "Array"
            },
            "todo": [
                "Not sure if this is used"
            ],
            "class": "Prometheus.Helpers.PriorityIcon",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/translate-comment.js",
            "line": 7,
            "description": "This helper lets us translate the comment markup stored in the database.\n\nThe current suuport is for `{{}}` mentions with the type user, `>. \\n` for list\nand `\\n` converted to <br />\n\nNo longer necessary as we are now using At.js",
            "itemtype": "method",
            "name": "translateComment",
            "params": [
                {
                    "name": "data",
                    "description": "The comment",
                    "type": "String"
                }
            ],
            "return": {
                "description": "translatedComment The translated comment",
                "type": "String"
            },
            "todo": [
                "Handle exception. If possible then make generic"
            ],
            "class": "Prometheus.Helpers.TranslateComment",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/helpers/user-created.js",
            "line": 7,
            "description": "This helper is used to find if among the objects passed the user created any\nobject",
            "itemtype": "method",
            "name": "UserCreated",
            "params": [
                {
                    "name": "model",
                    "description": "A collection model object",
                    "type": "ModelCollection"
                },
                {
                    "name": "userId",
                    "description": "The identifier we are trying to filter on",
                    "type": "String"
                }
            ],
            "return": {
                "description": "created The flag which is true if userId is a createdUser of the model",
                "type": "Boolean"
            },
            "todo": [
                "Handle exception. If possible then make generic"
            ],
            "class": "Prometheus.Helpers.UserCreated",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/initializers/inject-router.js",
            "line": 5,
            "description": "This function is called by Emberjs by default and in this application we\nsetup the Logger configuration which can be overwritter in the environment\nconfiguration.\nGot the suggestion from http://stackoverflow.com/questions/30697674/ember-transitiontoroute-cleanly-in-a-component-without-sendaction#answer-30787510",
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "application",
                    "description": "The application in which to inject a service",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Initializers.InjectRouter",
            "module": "App",
            "namespace": "Prometheus.Helpers"
        },
        {
            "file": "app/initializers/inject-router.js",
            "line": 30,
            "description": "The name of the initializer",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Initializers.Initializer",
            "module": "App"
        },
        {
            "file": "app/initializers/inject-router.js",
            "line": 40,
            "description": "The name of the initializer",
            "itemtype": "property",
            "name": "initialize",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "InjectRouter",
            "module": "App"
        },
        {
            "file": "app/initializers/javascript-behaviors.js",
            "line": 21,
            "description": "The name of the initializer",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Initializers.JavascriptBehaviors",
            "module": "App"
        },
        {
            "file": "app/initializers/javascript-behaviors.js",
            "line": 31,
            "description": "This function is called by Emberjs by default and in this application we\nsetup the Logger configuration which can be overwritter in the environment\nconfiguration.",
            "itemtype": "method",
            "name": "initialize",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Initializers.JavascriptBehaviors",
            "module": "App"
        },
        {
            "file": "app/initializers/setup-logger.js",
            "line": 17,
            "description": "The name of the initializer",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Initializers.SetupLogger",
            "module": "App"
        },
        {
            "file": "app/initializers/setup-logger.js",
            "line": 27,
            "description": "This function is called by Emberjs by default and in this application we\nsetup the Logger configuration which can be overwritter in the environment\nconfiguration.",
            "itemtype": "method",
            "name": "initialize",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Initializers.SetupLogger",
            "module": "App"
        },
        {
            "file": "app/models/activity.js",
            "line": 17,
            "description": "The date on which the activity was created",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Activity",
            "module": "i18n"
        },
        {
            "file": "app/models/activity.js",
            "line": 27,
            "description": "The description of the activity",
            "itemtype": "property",
            "name": "description",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Activity",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/activity.js",
            "line": 37,
            "description": "The identifier of the user who created the activity",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Activity",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/activity.js",
            "line": 47,
            "description": "The name of the entity the activity is related to",
            "itemtype": "property",
            "name": "relatedTo",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Activity",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/activity.js",
            "line": 57,
            "description": "The identifier of the activity",
            "itemtype": "property",
            "name": "relatedId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Activity",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/activity.js",
            "line": 67,
            "description": "The type of the activity, the type is used to determine the layout of the\nactivity in the time-line",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Activity",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/activity.js",
            "line": 78,
            "description": "The name of the user who created the activity",
            "itemtype": "property",
            "name": "createdUserName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Activity",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/activity.js",
            "line": 88,
            "description": "If the type of activity is related when this field tells us the type of\nactivity that was performed for the related item",
            "itemtype": "property",
            "name": "relatedActivity",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Activity",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/activity.js",
            "line": 99,
            "description": "The identifier of related entity that created the activity",
            "itemtype": "property",
            "name": "relatedActivityId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Activity",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/activity.js",
            "line": 109,
            "description": "If the type of activity is related when this field tells us the type of\nactivity that was performed for the related item",
            "itemtype": "property",
            "name": "relatedActivityModule",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Activity",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/activity.js",
            "line": 120,
            "description": "The object of the user who created te activity",
            "itemtype": "property",
            "name": "createdBy",
            "type": "UserModel",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Activity",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/activity.js",
            "line": 130,
            "description": "The project the activity is related to",
            "itemtype": "property",
            "name": "project",
            "type": "ProjectModel",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Activity",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/comment.js",
            "line": 17,
            "description": "The date on which the comment was created",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Comment",
            "module": "i18n"
        },
        {
            "file": "app/models/comment.js",
            "line": 27,
            "description": "The date on which the comment was last modified",
            "itemtype": "property",
            "name": "dateModified",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Comment",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/comment.js",
            "line": 37,
            "description": "The soft deletion flag of the comment",
            "itemtype": "property",
            "name": "deleted",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Comment",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/comment.js",
            "line": 47,
            "description": "The comment",
            "itemtype": "property",
            "name": "comment",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.CommentModel",
            "module": "i18n"
        },
        {
            "file": "app/models/comment.js",
            "line": 57,
            "description": "The identifier of the user who created the comment",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Comment",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/comment.js",
            "line": 67,
            "description": "The name of the user who created the comment",
            "itemtype": "property",
            "name": "createdUserName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Comment",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/comment.js",
            "line": 77,
            "description": "The identifier of the user who last modified the comment",
            "itemtype": "property",
            "name": "modifiedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Comment",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/comment.js",
            "line": 87,
            "description": "The name of the user who last modified the comment",
            "itemtype": "property",
            "name": "modifiedUserName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Comment",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/comment.js",
            "line": 97,
            "description": "The entity the comment is related to",
            "itemtype": "property",
            "name": "relatedTo",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Comment",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/comment.js",
            "line": 107,
            "description": "The identifier of the record the comment is related to",
            "itemtype": "property",
            "name": "relatedId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Comment",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/comment.js",
            "line": 117,
            "description": "The user who created the comment",
            "itemtype": "property",
            "name": "createdby",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Comment",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/comment.js",
            "line": 127,
            "description": "The conversation room the comment is associated with",
            "itemtype": "property",
            "name": "conversationroom",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Comment",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 17,
            "description": "Subject of the conversation room",
            "itemtype": "property",
            "name": "subject",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 27,
            "description": "Date on which the conversation room was created on",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 37,
            "description": "Date on which the conversation room was last modified",
            "itemtype": "property",
            "name": "dateModified",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 47,
            "description": "Soft deletion flag",
            "itemtype": "property",
            "name": "deleted",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 57,
            "description": "Description of the conversation room",
            "itemtype": "property",
            "name": "description",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 67,
            "description": "The identifier of the user who created the room",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 77,
            "description": "The name of the user who created the room",
            "itemtype": "property",
            "name": "createdUserName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 87,
            "description": "The name of the user who last modified the room",
            "itemtype": "property",
            "name": "modifiedUserName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 97,
            "description": "The identifier of the user who last modified the room",
            "itemtype": "property",
            "name": "subject",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 107,
            "description": "Type of conversation room e.g. vote, discussion",
            "itemtype": "property",
            "name": "roomType",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 117,
            "description": "The identifier of the project that this room belongs to",
            "itemtype": "property",
            "name": "projectId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 127,
            "description": "The user who created the room",
            "itemtype": "property",
            "name": "createdBy",
            "type": "UserModel",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 137,
            "description": "The user who modified the room",
            "itemtype": "property",
            "name": "modifiedBy",
            "type": "UserModel",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 147,
            "description": "The project this room belongs to",
            "itemtype": "property",
            "name": "project",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 157,
            "description": "Comments made on this conversation room",
            "itemtype": "property",
            "name": "comments",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/conversationroom.js",
            "line": 167,
            "description": "Votes made on this conversation room",
            "itemtype": "property",
            "name": "votes",
            "type": "VoteModel",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Conversationroom",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/issue.js",
            "line": 17,
            "description": "Subject of the issue",
            "itemtype": "property",
            "name": "subject",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 27,
            "description": "Date on which the issue was created",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 37,
            "description": "Date on which the issue was last modified",
            "itemtype": "property",
            "name": "dateModified",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 47,
            "description": "Soft deletion flag",
            "itemtype": "property",
            "name": "deleted",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 57,
            "description": "Description of the issue",
            "itemtype": "property",
            "name": "description",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 67,
            "description": "Identifier of the create who created the issue",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 77,
            "description": "The identifier of the user who is designated as the owner of the issue",
            "itemtype": "property",
            "name": "owner",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 87,
            "description": "The identifier of the user who is currently the assignee of the issue",
            "itemtype": "property",
            "name": "assignee",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 97,
            "description": "The identifier of the user who reported the issue",
            "itemtype": "property",
            "name": "reportedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 107,
            "description": "The identifier of the user who last modified the issue",
            "itemtype": "property",
            "name": "modifiedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 117,
            "description": "The number of the issue",
            "itemtype": "property",
            "name": "issueNumber",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 127,
            "description": "The end data set for the issue",
            "itemtype": "property",
            "name": "endDate",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 137,
            "description": "The date on which the issue is set to start",
            "itemtype": "property",
            "name": "subject",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 147,
            "description": "Status of the issue",
            "itemtype": "property",
            "name": "status",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 157,
            "description": "Priority of the issue",
            "itemtype": "property",
            "name": "priority",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 167,
            "description": "The identifier of the project the issue belongs to",
            "itemtype": "property",
            "name": "projectId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 177,
            "description": "The identifier of the milestone this issue is set for",
            "itemtype": "property",
            "name": "milestoneId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 187,
            "description": "The identifier of the parent of the issue",
            "itemtype": "property",
            "name": "parentId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 197,
            "description": "The identifier of the type this issue belongs to",
            "itemtype": "property",
            "name": "typeId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 207,
            "description": "The user to whom this issue is currently assigned to",
            "itemtype": "property",
            "name": "assignedTo",
            "type": "UserModel",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 217,
            "description": "The user who created this issue",
            "itemtype": "property",
            "name": "createdBy",
            "type": "UserModel",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 227,
            "description": "The user who last modified this issue",
            "itemtype": "property",
            "name": "modifiedBy",
            "type": "UserModel",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 237,
            "description": "The user who is responsible for this issue",
            "itemtype": "property",
            "name": "ownedBy",
            "type": "UserModel",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 247,
            "description": "The user who reported this issue",
            "itemtype": "property",
            "name": "reportedBy",
            "type": "UserModel",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 257,
            "description": "The project which this issues belongs to",
            "itemtype": "property",
            "name": "project",
            "type": "ProjectModel",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 267,
            "description": "The milestone which this issue belongs to",
            "itemtype": "property",
            "name": "milestone",
            "type": "MilestoneModel",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 277,
            "description": "The parent issue of this issue",
            "itemtype": "property",
            "name": "parentissue",
            "type": "IssueModel",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 287,
            "description": "The type of the issue",
            "itemtype": "property",
            "name": "issuetype",
            "type": "IssuetypeModel",
            "access": "private",
            "tagname": "",
            "class": "IssueModel",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 297,
            "description": "The estimated time on the issue",
            "itemtype": "property",
            "name": "estimated",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 307,
            "description": "The spent time on the issue",
            "itemtype": "property",
            "name": "spent",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 317,
            "description": "The child issues of this issue",
            "itemtype": "property",
            "name": "childissues",
            "type": "IssueModel",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 327,
            "description": "The comments made on this issue",
            "itemtype": "property",
            "name": "comments",
            "type": "IssueModel",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issue.js",
            "line": 337,
            "description": "The child issues of this issue",
            "itemtype": "property",
            "name": "childissues",
            "type": "IssueModel",
            "access": "private",
            "tagname": "",
            "class": "Issue",
            "module": "i18n"
        },
        {
            "file": "app/models/issuetype.js",
            "line": 17,
            "description": "Name of the issue type",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Issuetype",
            "module": "i18n"
        },
        {
            "file": "app/models/issuetype.js",
            "line": 27,
            "description": "Date on which the issue type was created",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Issuetype",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/issuetype.js",
            "line": 37,
            "description": "Date on which the issue type was last modified",
            "itemtype": "property",
            "name": "dateModified",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Issuetype",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/issuetype.js",
            "line": 47,
            "description": "Soft deletion flag",
            "itemtype": "property",
            "name": "deleted",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Issuetype",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/issuetype.js",
            "line": 57,
            "description": "Description of the issue type",
            "itemtype": "property",
            "name": "description",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Issuetype",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/issuetype.js",
            "line": 67,
            "description": "Identifier of the create who created the issue type",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Issuetype",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/issuetype.js",
            "line": 77,
            "description": "The identifier of the user who last modified the issue type",
            "itemtype": "property",
            "name": "modifiedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Issuetype",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/issuetype.js",
            "line": 87,
            "description": "The identifier of the project the issue type belongs to",
            "itemtype": "property",
            "name": "projectId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Issuetype",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/issuetype.js",
            "line": 97,
            "description": "The system flag, the issue types with system flag cannot be deleted and are\ninherited by the projects by default",
            "itemtype": "property",
            "name": "system",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Issuetype",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/membership.js",
            "line": 17,
            "description": "The identifier of the project for which this membership rule is defined",
            "itemtype": "property",
            "name": "projectId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Membership",
            "module": "i18n"
        },
        {
            "file": "app/models/membership.js",
            "line": 27,
            "description": "The identifier of the for whom this membership rule is defined",
            "itemtype": "property",
            "name": "userId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Membership",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/membership.js",
            "line": 37,
            "description": "The identifier of the role which is assigned to the user under the projectId\nthat this rule is defined for",
            "itemtype": "property",
            "name": "roleId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Membership",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/membership.js",
            "line": 48,
            "description": "The soft deletion flag for the membership",
            "itemtype": "property",
            "name": "deleted",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Membership",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/membership.js",
            "line": 58,
            "description": "The date on which this membership rule was created",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Membership",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/membership.js",
            "line": 68,
            "description": "The date on which this membership rule was last modified",
            "itemtype": "property",
            "name": "dateModified",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Membership",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/membership.js",
            "line": 78,
            "description": "The identifier of the user who created the membership rule",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Membership",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/membership.js",
            "line": 88,
            "description": "The identifier of the user who last modified the membership rule",
            "itemtype": "property",
            "name": "modifiedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Membership",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 17,
            "description": "The name of the milestone",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n"
        },
        {
            "file": "app/models/milestone.js",
            "line": 27,
            "description": "The date on which the milestone was created",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 37,
            "description": "The date on which the milestone was created",
            "itemtype": "property",
            "name": "dateModified",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 47,
            "description": "The description of the milestone",
            "itemtype": "property",
            "name": "description",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 57,
            "description": "The identifier of the user who created the milestone",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 67,
            "description": "The identifier of the user who laste modified the milestone",
            "itemtype": "property",
            "name": "modifiedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 77,
            "description": "The type of the milestone",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 87,
            "description": "The status of the milestone",
            "itemtype": "property",
            "name": "milestone",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 97,
            "description": "The start date set for the milestone",
            "itemtype": "property",
            "name": "startDate",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 107,
            "description": "The end date set for the milestone",
            "itemtype": "property",
            "name": "endDate",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 117,
            "description": "The identifier of the project to which this milestone belongs to",
            "itemtype": "property",
            "name": "projectId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 127,
            "description": "The soft deletion flag of the milestone",
            "itemtype": "property",
            "name": "deleted",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 137,
            "description": "The project the milestone is related to",
            "itemtype": "property",
            "name": "project",
            "type": "ProjectModel",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/milestone.js",
            "line": 147,
            "description": "The issues that belongs to this milestone",
            "itemtype": "property",
            "name": "issues",
            "type": "IssueModel",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Milestone",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 17,
            "description": "Name of project",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n"
        },
        {
            "file": "app/models/project.js",
            "line": 27,
            "description": "Short Code of project",
            "itemtype": "property",
            "name": "shortCode",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 37,
            "description": "Date on which the project was created",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 47,
            "description": "Date on which the project was last modified",
            "itemtype": "property",
            "name": "dateModified",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 57,
            "description": "The start date of the project",
            "itemtype": "property",
            "name": "startDate",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 67,
            "description": "The end date of the project",
            "itemtype": "property",
            "name": "endDate",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 77,
            "description": "Type of the project",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 87,
            "description": "User who last modified the project",
            "itemtype": "property",
            "name": "modifiedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 97,
            "description": "The project owner ot assignee",
            "itemtype": "property",
            "name": "assignee",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 107,
            "description": "Soft deletion flag of the project",
            "itemtype": "property",
            "name": "deleted",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 117,
            "description": "Description of the project",
            "itemtype": "property",
            "name": "description",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 127,
            "description": "Status of the project",
            "itemtype": "property",
            "name": "status",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 137,
            "description": "Scope of the project",
            "itemtype": "property",
            "name": "scope",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 147,
            "description": "Product Vision",
            "itemtype": "property",
            "name": "vision",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 157,
            "description": "User who created the project",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 167,
            "description": "The estimated budget of the project",
            "itemtype": "property",
            "name": "estimatedBudget",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 177,
            "description": "The amount of budget spent on the project",
            "itemtype": "property",
            "name": "spentBudget",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 187,
            "description": "Project owner",
            "itemtype": "property",
            "name": "owner",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 197,
            "description": "User who created the project",
            "itemtype": "property",
            "name": "createdBy",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 207,
            "description": "User who modified the project",
            "itemtype": "property",
            "name": "modifiedBy",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 217,
            "description": "The members of this project",
            "itemtype": "property",
            "name": "members",
            "type": "UserModel",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 227,
            "description": "The conversations that are happening on this project",
            "itemtype": "property",
            "name": "conversations",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 237,
            "description": "These are the issues that are related to the project, since the number of\nissues related to a project can grow significantly it is advisable that they\nare not retrieve via the same query as the other project information",
            "itemtype": "property",
            "name": "issues",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 249,
            "description": "The roles related to the members of this project, please note that these\nroles are not related to the users directly. The API simply returns all\nthe roles as well as the membership rules. The application has to relate the\nuser to the role via the code.",
            "itemtype": "property",
            "name": "roles",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/project.js",
            "line": 262,
            "description": "The membership rules for this project.",
            "itemtype": "property",
            "name": "memberships",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/role.js",
            "line": 17,
            "description": "Name of the role",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Role",
            "module": "i18n"
        },
        {
            "file": "app/models/role.js",
            "line": 27,
            "description": "The date on which the role was created",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Role",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/role.js",
            "line": 37,
            "description": "The date on which the role was last modified",
            "itemtype": "property",
            "name": "dateModified",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Role",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/role.js",
            "line": 47,
            "description": "The soft deletion flag of the role",
            "itemtype": "property",
            "name": "deleted",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Role",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/role.js",
            "line": 57,
            "description": "The description of the role",
            "itemtype": "property",
            "name": "description",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Role",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/role.js",
            "line": 67,
            "description": "The identifier of the user who created the role",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Role",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/role.js",
            "line": 77,
            "description": "The identifier of the user who last modified the role",
            "itemtype": "property",
            "name": "modifiedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Role",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/tag.js",
            "line": 17,
            "description": "The tag",
            "itemtype": "property",
            "name": "tag",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Tagged",
            "module": "i18n"
        },
        {
            "file": "app/models/tag.js",
            "line": 27,
            "description": "The date on which the tag was created",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Tagged",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/tag.js",
            "line": 37,
            "description": "The date on which the tag was last mofidied",
            "itemtype": "property",
            "name": "dateModified",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Tagged",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/tag.js",
            "line": 47,
            "description": "The soft deletion flag of the tag",
            "itemtype": "property",
            "name": "tag",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Tagged",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/tag.js",
            "line": 57,
            "description": "The identifier of the user who last created the tag",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Tagged",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/tag.js",
            "line": 67,
            "description": "The name of the user who created the tag",
            "itemtype": "property",
            "name": "createdUserName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Tagged",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/tag.js",
            "line": 77,
            "description": "The identifier of the user who last modified the tag",
            "itemtype": "property",
            "name": "modifiedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Tagged",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/tag.js",
            "line": 87,
            "description": "The name of the user who last modified the tag",
            "itemtype": "property",
            "name": "modifiedUserName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Tagged",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/tagged.js",
            "line": 18,
            "description": "The identifier of the entity the tag is related to",
            "itemtype": "property",
            "name": "relatedId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Tagged",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/tagged.js",
            "line": 28,
            "description": "The entity the tag is related to",
            "itemtype": "property",
            "name": "relatedTo",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Tagged",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/tagged.js",
            "line": 38,
            "description": "The identifier of the tag",
            "itemtype": "property",
            "name": "tagId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Tagged",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/timelog.js",
            "line": 17,
            "description": "The date on which the time log entry was made",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Timelog",
            "module": "i18n"
        },
        {
            "file": "app/models/timelog.js",
            "line": 27,
            "description": "The date on which the time log entry was last modified",
            "itemtype": "property",
            "name": "dateModified",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Timelog",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/timelog.js",
            "line": 37,
            "description": "The soft deletion flag of the time log entry",
            "itemtype": "property",
            "name": "deleted",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Timelog",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/timelog.js",
            "line": 47,
            "description": "The identifier of the user who created the time log entry",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Timelog",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/timelog.js",
            "line": 57,
            "description": "The identifier of the user who last modifed the time log entry",
            "itemtype": "property",
            "name": "modifedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Timelog",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/timelog.js",
            "line": 67,
            "description": "The identifier of the issue for which the time log entry was made",
            "itemtype": "property",
            "name": "issueId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Timelog",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/timelog.js",
            "line": 77,
            "description": "The minutes part of the time log entry",
            "itemtype": "property",
            "name": "minutes",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Timelog",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/timelog.js",
            "line": 87,
            "description": "The hours part of the time log entry",
            "itemtype": "property",
            "name": "hours",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Timelog",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/timelog.js",
            "line": 97,
            "description": "The days part of the time log entry",
            "itemtype": "property",
            "name": "days",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Timelog",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/timelog.js",
            "line": 107,
            "description": "The context in which the time log entry was made, currently we are supporting\nestiamted time and the spent time. The estimated time is represented by 'est'\nand the spent time is represented by 'spent'",
            "itemtype": "property",
            "name": "context",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Timelog",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/token.js",
            "line": 17,
            "description": "Access Token",
            "itemtype": "property",
            "name": "access_token",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Token",
            "module": "i18n"
        },
        {
            "file": "app/models/token.js",
            "line": 27,
            "description": "Expires In",
            "itemtype": "property",
            "name": "expires_in",
            "type": "Date",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Token",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/token.js",
            "line": 37,
            "description": "Token Type",
            "itemtype": "property",
            "name": "token_type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Token",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/token.js",
            "line": 47,
            "description": "Scope",
            "itemtype": "property",
            "name": "scope",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Token",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/token.js",
            "line": 57,
            "description": "Refresh Token",
            "itemtype": "property",
            "name": "refresh_token",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Token",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/token.js",
            "line": 67,
            "description": "Grent Type",
            "itemtype": "property",
            "name": "grant_type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Token",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/token.js",
            "line": 77,
            "description": "Client Id",
            "itemtype": "property",
            "name": "client_id",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Token",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/token.js",
            "line": 87,
            "description": "Client Secret",
            "itemtype": "property",
            "name": "client_secret",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Token",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/user.js",
            "line": 17,
            "description": "Username",
            "itemtype": "property",
            "name": "username",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Model.User",
            "module": "i18n"
        },
        {
            "file": "app/models/user.js",
            "line": 27,
            "description": "Email Address",
            "itemtype": "property",
            "name": "email",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Model.User",
            "module": "i18n",
            "namespace": "Prometheus.Model"
        },
        {
            "file": "app/models/user.js",
            "line": 37,
            "description": "Status",
            "itemtype": "property",
            "name": "status",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Model.User",
            "module": "i18n",
            "namespace": "Prometheus.Model"
        },
        {
            "file": "app/models/user.js",
            "line": 47,
            "description": "Name",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Model.User",
            "module": "i18n",
            "namespace": "Prometheus.Model"
        },
        {
            "file": "app/models/user.js",
            "line": 57,
            "description": "Date on which the user was created",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Model.User",
            "module": "i18n",
            "namespace": "Prometheus.Model"
        },
        {
            "file": "app/models/user.js",
            "line": 67,
            "description": "Date on which the user was last modified",
            "itemtype": "property",
            "name": "dateModified",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Model.User",
            "module": "i18n",
            "namespace": "Prometheus.Model"
        },
        {
            "file": "app/models/user.js",
            "line": 77,
            "description": "Soft deletion flag",
            "itemtype": "property",
            "name": "deleted",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Model.User",
            "module": "i18n",
            "namespace": "Prometheus.Model"
        },
        {
            "file": "app/models/user.js",
            "line": 87,
            "description": "Description",
            "itemtype": "property",
            "name": "description",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Model.User",
            "module": "i18n",
            "namespace": "Prometheus.Model"
        },
        {
            "file": "app/models/user.js",
            "line": 97,
            "description": "User who created this user",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Model.User",
            "module": "i18n",
            "namespace": "Prometheus.Model"
        },
        {
            "file": "app/models/user.js",
            "line": 107,
            "description": "User who modified this user",
            "itemtype": "property",
            "name": "modifiedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Model.User",
            "module": "i18n",
            "namespace": "Prometheus.Model"
        },
        {
            "file": "app/models/user.js",
            "line": 117,
            "description": "Title of the user",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Model.User",
            "module": "i18n",
            "namespace": "Prometheus.Model"
        },
        {
            "file": "app/models/user.js",
            "line": 127,
            "description": "Phone number of the user",
            "itemtype": "property",
            "name": "phone",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Model.User",
            "module": "i18n",
            "namespace": "Prometheus.Model"
        },
        {
            "file": "app/models/vote.js",
            "line": 17,
            "description": "Date on which the vote was created",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Vote",
            "module": "i18n"
        },
        {
            "file": "app/models/vote.js",
            "line": 27,
            "description": "Date on which the vote was last modified",
            "itemtype": "property",
            "name": "dateModified",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Vote",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/vote.js",
            "line": 37,
            "description": "The identifier of the user who created the vote",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Vote",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/vote.js",
            "line": 47,
            "description": "The name of the use who created the vote",
            "itemtype": "property",
            "name": "createdUserName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Vote",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/vote.js",
            "line": 57,
            "description": "The identifier of the user who last modified the vote",
            "itemtype": "property",
            "name": "modifiedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Vote",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/vote.js",
            "line": 67,
            "description": "The name of the user who last modified the vote",
            "itemtype": "property",
            "name": "modifiedUserName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Vote",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/vote.js",
            "line": 77,
            "description": "The vote flag",
            "itemtype": "property",
            "name": "deleted",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Vote",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/vote.js",
            "line": 87,
            "description": "The identifier of the record this vote is related to",
            "itemtype": "property",
            "name": "relatedId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Vote",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/vote.js",
            "line": 97,
            "description": "The model this vote is related to",
            "itemtype": "property",
            "name": "relatedTo",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Vote",
            "module": "i18n",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/models/wiki.js",
            "line": 17,
            "description": "Name of the wiki page",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 27,
            "description": "Date on which the wiki page was created",
            "itemtype": "property",
            "name": "dateCreated",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 37,
            "description": "Date on which the wiki page was last modified",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 47,
            "description": "The identifier of the user who created the wiki page",
            "itemtype": "property",
            "name": "createdUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 57,
            "description": "The name of the use who created the wiki page",
            "itemtype": "property",
            "name": "createdUserName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 67,
            "description": "The identifier of the user who last modified the wiki page",
            "itemtype": "property",
            "name": "modifiedUser",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 77,
            "description": "The name of the user who last modified the wiki page",
            "itemtype": "property",
            "name": "modifiedUserName",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 87,
            "description": "The soft deletion flag of the wiki page",
            "itemtype": "property",
            "name": "deleted",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 97,
            "description": "The status of the wiki page",
            "itemtype": "property",
            "name": "status",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 107,
            "description": "The lock flag of the wiki page",
            "itemtype": "property",
            "name": "locked",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 117,
            "description": "The upvotes given to the project",
            "itemtype": "property",
            "name": "upvotes",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 127,
            "description": "The identifier of the project that the wiki page is linked to",
            "itemtype": "property",
            "name": "projectId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 137,
            "description": "The mark up of the wiki page",
            "itemtype": "property",
            "name": "markUp",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 147,
            "description": "The identifier of the parent wiki page",
            "itemtype": "property",
            "name": "parentId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 157,
            "description": "The tags for the wiki page",
            "itemtype": "property",
            "name": "tags",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 167,
            "description": "These are the tag relationship entries",
            "itemtype": "property",
            "name": "tagged",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/models/wiki.js",
            "line": 178,
            "description": "The votes for this wiki page",
            "itemtype": "property",
            "name": "vote",
            "type": "Relationship",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "i18n"
        },
        {
            "file": "app/routes/app/project/issue/index.js",
            "line": 18,
            "description": "We need to reload the model as the values related ot the page's data are\nchanged so we are relying on the queryParams provided by Ember to reload\nthe model as the following parameter are changed.",
            "itemtype": "property",
            "name": "queryParams",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Index",
            "module": "App.Project.Issue"
        },
        {
            "file": "app/routes/app/project/issue/index.js",
            "line": 43,
            "description": "The field on which we want to sort by default",
            "itemtype": "property",
            "name": "sort",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Index",
            "module": "App.Project.Issue"
        },
        {
            "file": "app/routes/app/project/issue/index.js",
            "line": 53,
            "description": "The order in which to sort by",
            "itemtype": "property",
            "name": "order",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Index",
            "module": "App.Project.Issue"
        },
        {
            "file": "app/routes/app/project/issue/index.js",
            "line": 63,
            "description": "The default page that we need to load",
            "itemtype": "property",
            "name": "page",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "class": "Index",
            "module": "App.Project.Issue"
        },
        {
            "file": "app/routes/app/project/issue/index.js",
            "line": 73,
            "description": "The default query that we need to load",
            "itemtype": "property",
            "name": "query",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Index",
            "module": "App.Project.Issue"
        },
        {
            "file": "app/routes/app/project/issue/index.js",
            "line": 83,
            "description": "The identifier of the project that we need to load the issues for",
            "itemtype": "property",
            "name": "projectId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Index",
            "module": "App.Project.Issue"
        },
        {
            "file": "app/routes/app/project/issue/index.js",
            "line": 94,
            "description": "The model for this route",
            "itemtype": "method",
            "name": "model",
            "params": [
                {
                    "name": "params",
                    "description": ""
                }
            ],
            "return": {
                "description": "Prometheus.Models.Issue"
            },
            "access": "private",
            "tagname": "",
            "class": "Index",
            "module": "App.Project.Issue"
        },
        {
            "file": "app/routes/app/project/issue/index.js",
            "line": 149,
            "description": "This function is called by the route when it has created the controller and\nthe controller is ready to be setup with any data that we may need. We are\nusing this function in order to bind the model of the route to the model\nof the controller.\n\nThe setup controller is only called once and if the model is changed Ember\nreflects the change in the controller as well.",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "The controller object for the issues",
                    "type": "Prometheus.Controllers.Issue"
                },
                {
                    "name": "model",
                    "description": "The model that is created by this route",
                    "type": "Prometheus.Models.Issue"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Index",
            "module": "App.Project.Issue"
        },
        {
            "file": "app/routes/app/project/issue/page.js",
            "line": 18,
            "description": "The model for this route",
            "itemtype": "method",
            "name": "model",
            "params": [
                {
                    "name": "params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Prometheus.Issue"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Routes.Page",
            "module": "App.Project.Issue"
        },
        {
            "file": "app/routes/app/project/issue/page.js",
            "line": 44,
            "description": "This function is called by the route when it has created the controller and\nthe controller is ready to be setup with any data that we may need. We are\nusing this function in order to bind the model of the route to the model\nof the controller.\n\nThe setup controller is only called once and if the model is changed Ember\nreflects the change in the controller as well.",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "The controller object for the issues",
                    "type": "Prometheus.Controllers.Issue"
                },
                {
                    "name": "model",
                    "description": "The model that is created by this route",
                    "type": "Prometheus.Models.Issue"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Routes.Page",
            "module": "App.Project.Issue"
        },
        {
            "file": "app/routes/app/project/issue/page.js",
            "line": 76,
            "description": "This function is used to setup the activities for the issue",
            "itemtype": "method",
            "name": "setupActivities",
            "params": [
                {
                    "name": "controller",
                    "description": "",
                    "type": "Prometheus.Controllers.Issue"
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "Prometheus.Models.Issue"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Routes.Page",
            "module": "App.Project.Issue"
        },
        {
            "file": "app/routes/app/project/wiki/create.js",
            "line": 23,
            "description": "The data for the current route",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/wiki/create.js",
            "line": 33,
            "description": "The current project",
            "itemtype": "property",
            "name": "project",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/wiki/create.js",
            "line": 43,
            "description": "The current user service",
            "itemtype": "property",
            "name": "currentUser",
            "type": "Ember.Service",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Routes.Wiki.Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/wiki/create.js",
            "line": 53,
            "description": "The setup controller function that will be called every time the user visits the module route,\nthis function is responsible for loading the required data for the route",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "the controller object for this route",
                    "type": "Prometheus.Controllers.Wiki"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Routes.Wiki.Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/wiki/create.js",
            "line": 94,
            "description": "This function retrieves the route parameters, Most of the wiki functionality\nis similar so we one write it once and extends it for different routes.\nIn order to make sure that we are able to retrieve the correct parameters we\nhave exposed this function.",
            "itemtype": "method",
            "name": "getParams",
            "return": {
                "description": "params The parameters for this route",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Routes.Wiki.Create",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/wiki/edit.js",
            "line": 20,
            "description": "This function retrieves the route parameters, Most of the wiki functionality\nis similar so we one write it once and extends it for different routes.\nIn order to make sure that we are able to retrieve the correct parameters we\nhave exposed this function.",
            "itemtype": "method",
            "name": "getParams",
            "return": {
                "description": "params The parameters for this route",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Routes.Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/wiki/edit.js",
            "line": 37,
            "description": "These are the events that are handled by this route",
            "itemtype": "property",
            "name": "action",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/wiki/edit.js",
            "line": 47,
            "description": "This function is used to navigate the user the the page route on save",
            "itemtype": "method",
            "name": "redirectOnSave",
            "params": [
                {
                    "name": "routeParams",
                    "description": ""
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Edit",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/wiki/page.js",
            "line": 19,
            "description": "The data for the current route",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/wiki/page.js",
            "line": 29,
            "description": "The current project",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/wiki/page.js",
            "line": 39,
            "description": "The wiki list, this list is retrieved by the app.wiki.project route but\nsince I do not want to send a network call to retrieve the same list again\nI am making it accessible within the same route. This property is set by\nthe parent route.",
            "itemtype": "property",
            "name": "wikilist",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/wiki/page.js",
            "line": 52,
            "description": "The setup controller function that will be called every time the user visits\nthe module route, this function is responsible for loading the required data\nfor the route",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "the controller object for this route",
                    "type": "Prometheus.Controllers.Wiki"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/wiki/page.js",
            "line": 111,
            "description": "This function retrieves the route parameters, Most of the wiki functionality\nis similar so we one write it once and extends it for different routes.\nIn order to make sure that we are able to retrieve the correct parameters we\nhave exposed this function.",
            "itemtype": "method",
            "name": "getParams",
            "return": {
                "description": "params The parameters for this route",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Page",
            "module": "App.Project.Wiki"
        },
        {
            "file": "app/routes/app/project/calendar.js",
            "line": 18,
            "description": "The requested module",
            "itemtype": "property",
            "name": "module",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/calendar.js",
            "line": 28,
            "description": "The data for the current route",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/calendar.js",
            "line": 38,
            "description": "The query being used to load the calendar items",
            "itemtype": "property",
            "name": "query",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/calendar.js",
            "line": 48,
            "description": "This controller is used to load the issues that we have in the system",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "the controller object for this route",
                    "type": "Prometheus.Controllers.Calendar"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/calendar.js",
            "line": 71,
            "description": "This function is used to load the Issues List. This list is used in the\nmessage-box to allow users to mention issues in the project.",
            "itemtype": "method",
            "name": "loadIssues",
            "params": [
                {
                    "name": "projectId",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Calendar",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/conversation.js",
            "line": 18,
            "description": "The requested module",
            "itemtype": "property",
            "name": "module",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/conversation.js",
            "line": 28,
            "description": "The data for the current route",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/conversation.js",
            "line": 38,
            "description": "The selected items in the list view",
            "itemtype": "property",
            "name": "selectedCount",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/conversation.js",
            "line": 48,
            "description": "This controller is used to load the conversations that we have in the system",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "the controller object for this route",
                    "type": "Prometheus.Controller.Conversation"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/conversation.js",
            "line": 99,
            "description": "This function is used to load the Issues List. This list is used in the\nmessage-box to allow users to mention issues in the project.",
            "itemtype": "method",
            "name": "loadIssues",
            "params": [
                {
                    "name": "projectId",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/conversation.js",
            "line": 141,
            "description": "This function is used to load the User List. This list is used in the\nmessage-box to allow users to mention the users in the system",
            "itemtype": "method",
            "name": "loadIssues",
            "access": "private",
            "tagname": "",
            "class": "Conversation",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/index.js",
            "line": 18,
            "description": "The project Id",
            "itemtype": "property",
            "name": "projectId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Index",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/index.js",
            "line": 28,
            "description": "The setup controller function that will be called every time the user visits\nthe route, this function is responsible for loading the required data",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "the controller object for this route",
                    "type": "Promethues.Controllers.Project"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Index",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/index.js",
            "line": 74,
            "description": "This function is used to retrieve and process the issues related to a project\nThere are two reasons that the issues are being loaded separately and not\npart of the ordinal call sent to retrieve the project information. The first\nreason is performance, the number of issues on a large project can easily\nexceed 1000 issues and if we retrieve the information along with project\ninformation due to the obviously complex nature of many relationships between\na project and other entities the retrieval cost for even a single project\nwould be in hundred of thousand of rows examined. So we only bring in the\ninformation that for there are going to be one a few decade rows in total\nwith the original project retrieval call.\nThe second reason is to retrive the related information. The API automatically`\nretrieves the related data but is restricted to first degree relationships.\nSecond degree and above relationships are not retrieved via the default call\ndue to obvious performance and complexity constraints.",
            "itemtype": "method",
            "name": "loadIssuesTime",
            "params": [
                {
                    "name": "projectId",
                    "description": "The identifier of the project being viewed",
                    "type": "String"
                }
            ],
            "todo": [
                "Explore the possibility of using the url project/:id/:relation as it is supported by the API"
            ],
            "class": "Index",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/index.js",
            "line": 130,
            "description": "This function is used to retrive the activities related to a project. Just\nlike the loadIssuesTime function the activities are loaded seperately to\navoid performance and complexity issues.",
            "itemtype": "method",
            "name": "loadActivities",
            "params": [
                {
                    "name": "projectId",
                    "description": "The identifier of the project which is being viewed",
                    "type": "String"
                }
            ],
            "todo": [
                "test performance and load in chunks if required."
            ],
            "class": "Index",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/wiki.js",
            "line": 22,
            "description": "The data for the current route",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/wiki.js",
            "line": 32,
            "description": "The tree representing the list of wiki pages",
            "itemtype": "property",
            "name": "tree",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/wiki.js",
            "line": 42,
            "description": "The setup controller function that will be called every time\nthe user visits the module route, this function is responsible\nfor loading the required data for the route",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "the controller object for this route",
                    "type": "Prometheus.Controllers.Wiki"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/wiki.js",
            "line": 119,
            "description": "This function is used to retrieve the list of tags in the system",
            "itemtype": "method",
            "name": "loadTags",
            "access": "private",
            "tagname": "",
            "class": "Wiki",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/wiki.js",
            "line": 158,
            "description": "The actions that this route would handle, normally route should not have to\nhandle any event from the view but in this case I do not want to send a hit\nto the server to retrieve the updated wiki list I want the route to update\nit self as we already have the updated model available to us.",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Wiki",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/wiki.js",
            "line": 171,
            "description": "This function is called the an individual wiki is updated that requires\nthe tree in this parent route to be updated. The controller for the\nsub-route throws the action which is caught by this parent route\nThis function is called when the wiki name is updated.",
            "itemtype": "method",
            "name": "modelUpdated",
            "params": [
                {
                    "name": "model",
                    "description": "the updated model of wiki",
                    "type": "Prometheus.Models.Wiki"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Wiki",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/project/wiki.js",
            "line": 194,
            "description": "This function is called the an individual wiki is updated that requires\nthe tree in this parent route to be updated. The controller for the\nsub-route throws the action which is caught by this parent route\nThis function is called when the parent of the wiki is updated\nTried to simply update the tree but that did not work, had to resort to\nrefresh the the whole route. Interestingly this works when I am updating\nthe a node's name in the function above but when I try to update the tree\nhierarchy then it fails.",
            "itemtype": "method",
            "name": "refreshWiki",
            "access": "public",
            "tagname": "",
            "class": "Wiki",
            "module": "App.Project"
        },
        {
            "file": "app/routes/app/module.js",
            "line": 21,
            "description": "The requested module",
            "itemtype": "property",
            "name": "module",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/routes/app/module.js",
            "line": 31,
            "description": "The data for the current route",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/routes/app/module.js",
            "line": 41,
            "description": "The meta data for the detail view for the requested module",
            "itemtype": "property",
            "name": "metaData",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/routes/app/module.js",
            "line": 51,
            "description": "The selected items in the list view",
            "itemtype": "property",
            "name": "selectedCount",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/routes/app/module.js",
            "line": 61,
            "description": "The internationalization service",
            "itemtype": "property",
            "name": "selectedCount",
            "type": "Service",
            "access": "private",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/routes/app/module.js",
            "line": 71,
            "description": "The setup controller function that will be called every time the user visits\nthe module route, this function is responsible for loading the required data\nfor the route",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "the controller object for this route",
                    "type": "Prometheus.Controllers.Module"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Module",
            "module": "App"
        },
        {
            "file": "app/routes/app/project.js",
            "line": 18,
            "description": "The project Id",
            "itemtype": "property",
            "name": "projectId",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "App",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/routes/app/project.js",
            "line": 28,
            "description": "The setup controller function that will be called every time the user visits\nthe route, this function is responsible for loading the required data",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "the controller object for this route",
                    "type": "Prometheus.Controllers.Project"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Models.Project",
            "module": "App",
            "namespace": "Prometheus.Models"
        },
        {
            "file": "app/routes/app/projectlist.js",
            "line": 22,
            "description": "The requested module",
            "itemtype": "property",
            "name": "module",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/routes/app/projectlist.js",
            "line": 32,
            "description": "The data for the current route",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/routes/app/projectlist.js",
            "line": 42,
            "description": "The meta data for the detail view for the requested module",
            "itemtype": "property",
            "name": "metaData",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/routes/app/projectlist.js",
            "line": 52,
            "description": "The selected items in the list view",
            "itemtype": "property",
            "name": "selectedCount",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/routes/app/projectlist.js",
            "line": 62,
            "description": "The internationalization service",
            "itemtype": "property",
            "name": "selectedCount",
            "type": "Service",
            "access": "private",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/routes/app/projectlist.js",
            "line": 72,
            "description": "The setup controller function that will be called every time the user visits\nthe module route, this function is responsible for loading the required data\nfor the route",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "the controller object for this route",
                    "type": "Prometheus.Controllers.Projectlist"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/routes/app/projectlist.js",
            "line": 104,
            "description": "This function is used in order to load the data for the list view",
            "itemtype": "method",
            "name": "loadData",
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/routes/app/projectlist.js",
            "line": 173,
            "description": "These are the actions handled by this route",
            "itemtype": "property",
            "name": "actions",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/routes/app/projectlist.js",
            "line": 183,
            "description": "This function is used to reload the route when required",
            "itemtype": "method",
            "name": "refreshRoute",
            "params": [
                {
                    "name": "params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Projectlist",
            "module": "App"
        },
        {
            "file": "app/routes/app.js",
            "line": 19,
            "description": "The i18n library service that is used in order to get the translations",
            "itemtype": "property",
            "name": "i18n",
            "type": "Ember.Service",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Controller.App",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/routes/app.js",
            "line": 29,
            "description": "The current user service",
            "itemtype": "property",
            "name": "currentUser",
            "type": "Ember.Service",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Controller.App",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/routes/app.js",
            "line": 39,
            "description": "This function is called by EmberJs before it retrieves the model",
            "itemtype": "method",
            "name": "beforeModel",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Controller.App",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/routes/app.js",
            "line": 49,
            "description": "This function catchs any issue thrown by the _loadCurrentUser function and\ninvalidates the session",
            "itemtype": "method",
            "name": "sessionAuthenticated",
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Controller.App",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/routes/app.js",
            "line": 62,
            "description": "This function is used to retrieve the currentUser using the current user\nservice",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "the controller object for this route",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Controller.App",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/routes/app.js",
            "line": 74,
            "description": "The setup controller function that will be called every time the user visits\nthe route, this function is responsible for loading the required data",
            "itemtype": "method",
            "name": "setupController",
            "params": [
                {
                    "name": "controller",
                    "description": "the controller object for this route",
                    "type": "Prometheus.Controllers.App"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Controller.App",
            "module": "App",
            "namespace": "Prometheus.Controller"
        },
        {
            "file": "app/routes/application.js",
            "line": 20,
            "description": "The i18n library service that is used in order to get the translations",
            "itemtype": "property",
            "name": "i18n",
            "type": "Ember.Service",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Routes.Application",
            "module": "App"
        },
        {
            "file": "app/routes/application.js",
            "line": 30,
            "description": "The session service which is offered by ember-simple-auth that will be used\nin order to verify whether the used is authenticated",
            "itemtype": "property",
            "name": "session",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Routes.Application",
            "module": "App",
            "namespace": "Prometheus.Routes"
        },
        {
            "file": "app/routes/application.js",
            "line": 41,
            "description": "This function get triggered before a model fetch is called, this is\ncalled every time and we routing the user to the signin route if a user\nis not authenticated",
            "itemtype": "method",
            "name": "afterModel",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Routes.Application",
            "module": "App",
            "namespace": "Prometheus.Routes"
        },
        {
            "file": "app/routes/application.js",
            "line": 57,
            "description": "This function get triggered right after a model fetch is called, this is\ncalled every time and we are setting up the default language in the i18n\nservice",
            "itemtype": "method",
            "name": "afterModel",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Routes.Application",
            "module": "App",
            "namespace": "Prometheus.Routes"
        },
        {
            "file": "app/serializers/application.js",
            "line": 19,
            "description": "Setting the primary key as the field id",
            "itemtype": "property",
            "name": "primaryKey",
            "type": "string",
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Routes.Application",
            "module": "App",
            "namespace": "Prometheus.Routes"
        },
        {
            "file": "app/serializers/application.js",
            "line": 29,
            "description": "By default EmberJS process the model name by pluralizing it, we want to\nkeep it as it is.",
            "itemtype": "method",
            "name": "modelNameFromPayloadKey",
            "params": [
                {
                    "name": "modelName",
                    "description": "The model name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "modelName The model name as it is",
                "type": "String"
            },
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Routes.Application",
            "module": "App",
            "namespace": "Prometheus.Routes"
        },
        {
            "file": "app/serializers/application.js",
            "line": 42,
            "description": "By default EmberJS process the field name, we want to camelize it",
            "itemtype": "method",
            "name": "keyForAttribute",
            "params": [
                {
                    "name": "key",
                    "description": "The key name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "key The key name camelized",
                "type": "String"
            },
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Routes.Application",
            "module": "App",
            "namespace": "Prometheus.Routes"
        },
        {
            "file": "app/serializers/application.js",
            "line": 54,
            "description": "Camelize the relationship key",
            "itemtype": "method",
            "name": "keyForRelationship",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "protected",
            "tagname": "",
            "class": "Prometheus.Routes.Application",
            "module": "App",
            "namespace": "Prometheus.Routes"
        },
        {
            "file": "app/services/current-user.js",
            "line": 20,
            "description": "The session service",
            "itemtype": "property",
            "name": "session",
            "type": "Service",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Services.CurrentUser",
            "module": "App"
        },
        {
            "file": "app/services/current-user.js",
            "line": 30,
            "description": "The store is injected as a service",
            "itemtype": "property",
            "name": "store",
            "type": "Service",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Services.CurrentUser",
            "module": "App",
            "namespace": "Prometheus.Services"
        },
        {
            "file": "app/services/current-user.js",
            "line": 40,
            "description": "Tis function is called to load the currentUser",
            "itemtype": "method",
            "name": "loadUser",
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Services.CurrentUser",
            "module": "App",
            "namespace": "Prometheus.Services"
        },
        {
            "file": "app/services/related-fields.js",
            "line": 26,
            "description": "This is the cached data that we use in order to store the lists we have retrieved",
            "itemtype": "property",
            "name": "data",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Services.RelatedField",
            "module": "App"
        },
        {
            "file": "app/services/related-fields.js",
            "line": 36,
            "description": "The store is injected as a service",
            "itemtype": "property",
            "name": "store",
            "type": "Service",
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Services.RelatedField",
            "module": "App",
            "namespace": "Prometheus.Services"
        },
        {
            "file": "app/services/related-fields.js",
            "line": 46,
            "description": "This function is responsible for retrieving and storing the lists required by dropdowns",
            "itemtype": "method",
            "name": "getRelated",
            "params": [
                {
                    "name": "model",
                    "description": "The name of the model for which the data is required"
                },
                {
                    "name": "fields",
                    "description": "The fields that should be selected"
                },
                {
                    "name": "queryParams",
                    "description": "The query based on which the data must be retrieved"
                },
                {
                    "name": "valueField",
                    "description": "The field that will be used as the select identifier"
                }
            ],
            "return": {
                "description": "related",
                "type": "Array"
            },
            "class": "Prometheus.Services.RelatedField",
            "module": "App",
            "namespace": "Prometheus.Services"
        },
        {
            "file": "app/services/related-fields.js",
            "line": 68,
            "description": "This function is responsible for retrieving and storing the lists required by dropdowns",
            "itemtype": "method",
            "name": "getList",
            "params": [
                {
                    "name": "list",
                    "description": ""
                },
                {
                    "name": "fields",
                    "description": "The fields that should be selected"
                },
                {
                    "name": "queryParams",
                    "description": "The query based on which the data must be retreived"
                },
                {
                    "name": "valueField",
                    "description": "The field that will be used as the select identifier"
                }
            ],
            "return": {
                "description": "list",
                "type": "Array"
            },
            "class": "Prometheus.Services.RelatedField",
            "module": "App",
            "namespace": "Prometheus.Services"
        },
        {
            "file": "app/utils/data/modeltotree.js",
            "line": 15,
            "description": "This function converts model to tree",
            "itemtype": "method",
            "name": "modelToTree",
            "params": [
                {
                    "name": "model",
                    "description": "The model that needs to be converted",
                    "type": "Prometheus.Models.Object"
                }
            ],
            "return": {
                "description": "tree The tree structure for the object",
                "type": "Object"
            },
            "todo": [
                "be able to convert most of the trees"
            ],
            "class": "Prometheus.Utils.Modeltotree",
            "module": "Data"
        },
        {
            "file": "app/utils/data/modeltotree.js",
            "line": 52,
            "description": "inpired from http://stackoverflow.com/questions/18017869/build-tree-array-from-flat-array-in-javascript#answer-31247960",
            "itemtype": "method",
            "name": "unflatten",
            "example": [
                "\nvar obj = {\n \"1\":{ \"id\":\"1\", \"name\":\"Home\" },\n \"2\":{ \"id\":\"2\", \"name\":\"Awesome\", \"parentId\":\"3\" },\n \"4\":{ \"id\":\"4\", \"name\":\"Entities\" },\n \"5\":{ \"id\":\"5\", \"name\":\"Mass income\" },\n \"3\":{ \"id\":\"3\", \"name\":\"Project\", \"parentId\":\"4\"  },\n \"6\":{ \"id\":\"6\", \"name\":\"Surely this time\" },\n \"7\":{ \"id\":\"7\", \"name\":\"Test update take 3\" },\n \"8\":{ \"id\":\"8\", \"name\":\"Welcome to our World\" }\n};\nresult = this.unflatten(obj);\n{\n  \"1\":{\n    \"id\":\"1\",\n    \"name\":\"Home\",\n    \"nodes\":{}\n  },\n  \"4\":{\n    \"id\":\"4\",\n    \"name\":\"Entities\",\n    \"nodes\":{\n      \"3\":{\n        \"id\":\"3\",\n        \"name\":\"Project\",\n        \"parentId\":\"4\",\n        \"nodes\":{\n          \"2\":{\n            \"id\":\"2\",\n            \"name\":\"Awesome\",\n            \"parentId\":\"3\",\n            \"nodes\":{}\n          }\n        }\n      }\n    }\n  },\n  \"5\":{\n    \"id\":\"5\",\n    \"name\":\"Mass income\",\n    \"nodes\":{}\n  },\n  \"6\":{\n    \"id\":\"6\",\n    \"name\":\"Surely this time\",\n    \"nodes\":{}\n  },\n  \"7\":{\n    \"id\":\"7\",\n    \"name\":\"Test update take 3\",\n    \"nodes\":{}\n  },\n  \"8\":{\n    \"id\":\"8\",\n    \"name\":\"Welcome to our World\",\n    \"nodes\":{}\n  }\n}"
            ],
            "params": [
                {
                    "name": "model",
                    "description": "The model that needs to be converted",
                    "type": "Prometheus.Models.Object"
                }
            ],
            "return": {
                "description": "tree The tree structure for the object",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Utils.Modeltotree",
            "module": "Data"
        },
        {
            "file": "app/utils/data/modeltotree.js",
            "line": 147,
            "description": "This function find a node in the tree for us",
            "itemtype": "method",
            "name": "findNode",
            "params": [
                {
                    "name": "id",
                    "description": "this id we need to locate in the tree",
                    "type": "String"
                },
                {
                    "name": "node",
                    "description": "the node in the tree we need to examine",
                    "type": "Object"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Utils.Modeltotree",
            "module": "Data"
        },
        {
            "file": "app/utils/data/modeltotree.js",
            "line": 178,
            "description": "This function find the parent of the node requested",
            "itemtype": "method",
            "name": "findParent",
            "params": [
                {
                    "name": "id",
                    "description": "this id we need to locate in the tree",
                    "type": "String"
                },
                {
                    "name": "node",
                    "description": "the node in the tree we need to examine",
                    "type": "Object"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Utils.Modeltotree",
            "module": "Data"
        },
        {
            "file": "app/utils/metadata/metadata.js",
            "line": 21,
            "description": "The list of modules in the system and their default behaviors",
            "itemtype": "property",
            "name": "modules",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Metadata",
            "module": "Metadata"
        },
        {
            "file": "app/utils/metadata/metadata.js",
            "line": 59,
            "description": "The metadata for the views in the sysetm. I want to built all the views via\nmetadata, this allow me to built very extendible views and application in\nreturn.",
            "itemtype": "property",
            "name": "views",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Metadata",
            "module": "Metadata"
        },
        {
            "file": "app/utils/metadata/metadata.js",
            "line": 502,
            "description": "This variable store the business logic for the system, although the basic\napplication behavior would be hard coded and would not work through the\ndefinitions in this object. However, hard coding the business logic\nmakes us compromise the flexibility that we would otherwise have. This\nis where the businessLogic meta comes into play, this logic will be\nexecuted by the application and thus would allow us to extend the\napplication behavior. All good but this is complex so will come later :)",
            "itemtype": "property",
            "name": "businessLogic",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "todo": [
                "Yet to be implemented :D"
            ],
            "class": "Metadata",
            "module": "Metadata"
        },
        {
            "file": "app/utils/metadata/metadata.js",
            "line": 519,
            "description": "This function is used to retrieve the metadata for the different views in the\nsystem. The function has the capability of translating the labels as well",
            "itemtype": "method",
            "name": "getViewMeta",
            "params": [
                {
                    "name": "module",
                    "description": "The module for which we have to retrieve the meta",
                    "type": "String"
                },
                {
                    "name": "view",
                    "description": "The view of the module whose meta is required",
                    "type": "String"
                },
                {
                    "name": "i18n",
                    "description": "The object for the internationalization library",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "metadata The requested metadata",
                "type": "Object"
            },
            "class": "Metadata",
            "module": "Metadata"
        },
        {
            "file": "app/utils/navigation/navigation.js",
            "line": 18,
            "description": "This function generates a basic form for the URL required by Ember.Route's transitionToRoute function",
            "itemtype": "method",
            "name": "buildURL",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity name that the user wants to navigate to e.g. projects",
                    "type": "String"
                },
                {
                    "name": "action",
                    "description": "The action that the user wants to navigate to e.g. detail, create, etc",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "The addition params that are to be passed over to Ember.Route",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "routeData The object that transitionToRoute and transitionTo accepts",
                "type": "Object"
            },
            "todo": [
                "support all possible routes"
            ],
            "class": "Prometheus.Utils.Navigation",
            "module": "Navigation"
        },
        {
            "file": "app/utils/query/builder.js",
            "line": 18,
            "description": "The current element that the query is applied on",
            "itemtype": "property",
            "name": "element",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Builder",
            "module": "Query"
        },
        {
            "file": "app/utils/query/builder.js",
            "line": 28,
            "description": "The current filters that the query is applied on",
            "itemtype": "property",
            "name": "filters",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Builder",
            "module": "Query"
        },
        {
            "file": "app/utils/query/builder.js",
            "line": 38,
            "description": "Initialize a query builder objects",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "element",
                    "description": "the selector of the element that will use the plugin",
                    "type": "String"
                },
                {
                    "name": "filters",
                    "description": "The filters to be used",
                    "type": "Array"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Builder",
            "module": "Query"
        },
        {
            "file": "app/utils/query/builder.js",
            "line": 78,
            "description": "Set the rules",
            "itemtype": "method",
            "name": "setRules",
            "params": [
                {
                    "name": "rules",
                    "description": "The rules applicable",
                    "type": "Array"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Builder",
            "module": "Query"
        },
        {
            "file": "app/utils/query/builder.js",
            "line": 94,
            "description": "Clear the rules set",
            "itemtype": "method",
            "name": "clear",
            "access": "public",
            "tagname": "",
            "class": "Builder",
            "module": "Query"
        },
        {
            "file": "app/utils/query/builder.js",
            "line": 108,
            "description": "Get the rules set",
            "itemtype": "method",
            "name": "getRules",
            "return": {
                "description": "rules  The rules set in the interface",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "class": "Builder",
            "module": "Query"
        },
        {
            "file": "app/utils/query/builder.js",
            "line": 123,
            "description": "Destroy the query builder for a a particular element",
            "itemtype": "method",
            "name": "destroy",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Builder",
            "module": "Query"
        },
        {
            "file": "app/utils/query/parser.js",
            "line": 18,
            "description": "The default query operator mapping",
            "itemtype": "property",
            "name": "queryOperators",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Parser",
            "module": "Query"
        },
        {
            "file": "app/utils/query/parser.js",
            "line": 49,
            "description": "The default rules operator mapping",
            "itemtype": "property",
            "name": "rulesOperators",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Parser",
            "module": "Query"
        },
        {
            "file": "app/utils/query/parser.js",
            "line": 80,
            "description": "This function converts a rule object to string",
            "itemtype": "method",
            "name": "evalRule",
            "params": [
                {
                    "name": "rule",
                    "description": "The rule as generated by Query Builder",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "query The query segment corresponding to the rule",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Parser",
            "module": "Query"
        },
        {
            "file": "app/utils/query/parser.js",
            "line": 92,
            "description": "This function is used to convert the rules object generated by getRules\nfunction into string query accepted by the porjects4me API",
            "itemtype": "method",
            "name": "getQueryString",
            "params": [
                {
                    "name": "query",
                    "description": "The rule object generated by getRules function",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "query The string format of the query",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "class": "Parser",
            "module": "Query"
        },
        {
            "file": "app/utils/query/parser.js",
            "line": 114,
            "description": "This function is used to convert the query generated by projects4me into\nrules object generated compatible with setRules function",
            "itemtype": "method",
            "name": "getRules",
            "params": [
                {
                    "name": "query",
                    "description": "The string format of the query",
                    "type": "String"
                },
                {
                    "name": "metadata",
                    "description": "The metadata definition for the rule",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "query The rule object supported by setRules function",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "class": "Parser",
            "module": "Query"
        },
        {
            "file": "app/utils/validator/fields.js",
            "line": 15,
            "description": "This function is used to validate the value for a field",
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "fieldType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "regex",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "public",
            "tagname": "",
            "class": "Prometheus.Utils.Fields",
            "module": "Validator"
        },
        {
            "file": "app/utils/validator/fields.js",
            "line": 45,
            "description": "This function is used to validate text type fields",
            "itemtype": "method",
            "name": "_validateText",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Utils.Fields",
            "module": "Validator"
        },
        {
            "file": "app/utils/validator/fields.js",
            "line": 66,
            "description": "This function is used to validate phone type fields",
            "itemtype": "method",
            "name": "_validatePhone",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Utils.Fields",
            "module": "Validator"
        },
        {
            "file": "app/utils/validator/fields.js",
            "line": 87,
            "description": "This function is used to validate the format for alpha numeric fields",
            "itemtype": "method",
            "name": "_validateAlphaNumeric",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "Prometheus.Utils.Fields",
            "module": "Validator"
        },
        {
            "file": "app/utils/validator/fields.js",
            "line": 101,
            "description": "This function peroforms the actual validation, if the value is not\nvalid then the filter is performed",
            "itemtype": "method",
            "name": "_validate",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "regexValidate",
                    "description": "",
                    "type": "Regex"
                },
                {
                    "name": "regexFilter",
                    "description": "",
                    "type": "Regex"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "todo": [
                "allow disabling of filter"
            ],
            "class": "Prometheus.Utils.Fields",
            "module": "Validator"
        }
    ],
    "warnings": []
}