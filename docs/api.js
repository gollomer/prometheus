YUI.add("yuidoc-meta", function(Y) {
   Y.YUIDoc = { meta: {
    "classes": [
        "Builder",
        "Calendar",
        "Conversation",
        "Create",
        "Edit",
        "Index",
        "InjectRouter",
        "Issue",
        "IssueModel",
        "Metadata",
        "Module",
        "Page",
        "Parser",
        "Projectlist",
        "Prometheus.Adapter.Application",
        "Prometheus.Adapter.ApplicationAdapter",
        "Prometheus.Application",
        "Prometheus.Authenticators.OAuth2Authenticator",
        "Prometheus.Authorizers.OAuth2Authorizer",
        "Prometheus.Component.ChatBox",
        "Prometheus.Component.TextField",
        "Prometheus.Components.ActionMenu",
        "Prometheus.Components.ActivityBlock",
        "Prometheus.Components.BootstrapModal",
        "Prometheus.Components.ChartEstimatedspent",
        "Prometheus.Components.ChartIssueratio",
        "Prometheus.Components.CheckboxField",
        "Prometheus.Components.ContentEditable",
        "Prometheus.Components.FieldCheckbox",
        "Prometheus.Components.FieldDate",
        "Prometheus.Components.FieldImage",
        "Prometheus.Components.FieldRadio",
        "Prometheus.Components.FieldText",
        "Prometheus.Components.FieldTextarea",
        "Prometheus.Components.FieldView",
        "Prometheus.Components.FormFields",
        "Prometheus.Components.MessageBox",
        "Prometheus.Components.MessageBoxComponent",
        "Prometheus.Components.MilestoneBlock",
        "Prometheus.Components.NavBar",
        "Prometheus.Components.QueryBuilder",
        "Prometheus.Components.QuillEditor",
        "Prometheus.Components.TextareaField",
        "Prometheus.Components.TreeList",
        "Prometheus.Controller.App",
        "Prometheus.Controller.Module",
        "Prometheus.Controller.Signin",
        "Prometheus.Controllers.Calendar",
        "Prometheus.Controllers.Conversation",
        "Prometheus.Controllers.Create",
        "Prometheus.Controllers.Edit",
        "Prometheus.Controllers.Index",
        "Prometheus.Controllers.Issue",
        "Prometheus.Controllers.Page",
        "Prometheus.Controllers.Projectlist",
        "Prometheus.Controllers.Wiki",
        "Prometheus.Helpers.CountVotes",
        "Prometheus.Helpers.GetDate",
        "Prometheus.Helpers.GetIssuecount",
        "Prometheus.Helpers.GetPage",
        "Prometheus.Helpers.GetProp",
        "Prometheus.Helpers.GetRole",
        "Prometheus.Helpers.GetTimelog",
        "Prometheus.Helpers.GetWiki",
        "Prometheus.Helpers.IfMatch",
        "Prometheus.Helpers.NavIcon",
        "Prometheus.Helpers.NotLast",
        "Prometheus.Helpers.PriorityIcon",
        "Prometheus.Helpers.SortableClass",
        "Prometheus.Helpers.TranslateComment",
        "Prometheus.Helpers.UserCreated",
        "Prometheus.Initializers.Initializer",
        "Prometheus.Initializers.InjectRouter",
        "Prometheus.Initializers.JavascriptBehaviors",
        "Prometheus.Initializers.SetupLogger",
        "Prometheus.Locales.en",
        "Prometheus.Model.User",
        "Prometheus.Models.Activity",
        "Prometheus.Models.Comment",
        "Prometheus.Models.CommentModel",
        "Prometheus.Models.Conversationroom",
        "Prometheus.Models.Issue",
        "Prometheus.Models.Issuetype",
        "Prometheus.Models.Membership",
        "Prometheus.Models.Milestone",
        "Prometheus.Models.Project",
        "Prometheus.Models.Role",
        "Prometheus.Models.Tagged",
        "Prometheus.Models.Timelog",
        "Prometheus.Models.Token",
        "Prometheus.Models.Vote",
        "Prometheus.Models.Wiki",
        "Prometheus.Routes.App",
        "Prometheus.Routes.AppRoute",
        "Prometheus.Routes.Application",
        "Prometheus.Routes.Calendar",
        "Prometheus.Routes.Conversation",
        "Prometheus.Routes.Create",
        "Prometheus.Routes.Edit",
        "Prometheus.Routes.Index",
        "Prometheus.Routes.Module",
        "Prometheus.Routes.Page",
        "Prometheus.Routes.Project",
        "Prometheus.Routes.Projectlist",
        "Prometheus.Routes.Wiki",
        "Prometheus.Routes.Wiki.Create",
        "Prometheus.Serializers.Application",
        "Prometheus.Services.CurrentUser",
        "Prometheus.Services.RelatedField",
        "Prometheus.Utils.Builder",
        "Prometheus.Utils.Fields",
        "Prometheus.Utils.Metadata",
        "Prometheus.Utils.Modeltotree",
        "Prometheus.Utils.Navigation",
        "Prometheus.Utils.Parser",
        "Wiki",
        "page"
    ],
    "modules": [
        "App",
        "App.Project",
        "App.Project.Issue",
        "App.Project.Wiki",
        "Data",
        "Metadata",
        "Navigation",
        "Query",
        "Validator",
        "i18n"
    ],
    "allModules": [
        {
            "displayName": "App",
            "name": "App",
            "description": "The module route, it is loaded when a user tried to navigate to the route :module e.g. acme.projects4.me/app/projects/"
        },
        {
            "displayName": "App.Project",
            "name": "App.Project",
            "description": "This is the route to load the conversations for a project"
        },
        {
            "displayName": "App.Project.Issue",
            "name": "App.Project.Issue",
            "description": "This is the route that will handle the creation of new issues"
        },
        {
            "displayName": "App.Project.Wiki",
            "name": "App.Project.Wiki",
            "description": "This is the create route for the wiki pages section\n\nIt is loaded when a user tried to navigate to the route\n\n:projectId/wiki/create e.g. acme.projects4.me/app/123/wiki/create"
        },
        {
            "displayName": "Data",
            "name": "Data",
            "description": "This utility class is used to convert model objects to tree"
        },
        {
            "displayName": "i18n",
            "name": "i18n",
            "description": "This is the english language tranlations for the project. For now they are\nhard coded but in future we would want to load them from the server and\nwe would like to allow people to include their own translations.\n\nThis should also be possible for plugins to have their own translations.\n\nNeed to see if we can support rtl"
        },
        {
            "displayName": "Metadata",
            "name": "Metadata",
            "description": "The meta is the main object storing the different types of metadata that the\napplication makes use of"
        },
        {
            "displayName": "Navigation",
            "name": "Navigation",
            "description": "This utility class is used for help the interaction with the API"
        },
        {
            "displayName": "Query",
            "name": "Query",
            "description": "This utility class is used for help interact with the plugin jQuery Query\nBuilder querybuilder.js.org"
        },
        {
            "displayName": "Validator",
            "name": "Validator",
            "description": "This utility provide data validation for the fields in the system"
        }
    ],
    "elements": []
} };
});